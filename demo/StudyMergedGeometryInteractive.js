(()=>{"use strict";var __webpack_modules__={7524:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// UNUSED EXPORTS: StudyMergedGeometryInteractive\n\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(6753);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/utils/BufferGeometryUtils.js\nvar BufferGeometryUtils = __webpack_require__(1426);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(3580);\n;// CONCATENATED MODULE: ./src/Common.ts\n\n\nvar Common = /** @class */ (function () {\n    function Common() {\n    }\n    Common.initScene = function () {\n        var scene = new three_module.Scene();\n        return scene;\n    };\n    Common.initLight = function (scene) {\n        var ambientLight = new three_module.AmbientLight(0xffffff, 1.0);\n        scene.add(ambientLight);\n        return ambientLight;\n    };\n    Common.initCamera = function (scene, W, H, near, far) {\n        if (near === void 0) { near = 1; }\n        if (far === void 0) { far = 400; }\n        var camera = new three_module.PerspectiveCamera(45, W / H, near, far);\n        camera.position.set(0, 0, 100);\n        camera.updateMatrixWorld(false);\n        scene.add(camera);\n        return camera;\n    };\n    Common.initControl = function (camera, render) {\n        var domElement;\n        if (render) {\n            domElement = render.domElement;\n        }\n        var control = new OrbitControls/* OrbitControls */.N(camera, domElement);\n        control.update();\n        return control;\n    };\n    Common.initRenderer = function (W, H, color, id, antialias) {\n        if (color === void 0) { color = 0x000000; }\n        if (id === void 0) { id = "webgl-canvas"; }\n        if (antialias === void 0) { antialias = true; }\n        var renderer = new three_module.WebGLRenderer({\n            canvas: document.getElementById(id),\n            antialias: antialias,\n        });\n        this.initRendererSettings(renderer, color, W, H);\n        return renderer;\n    };\n    Common.initRendererSettings = function (renderer, color, W, H) {\n        renderer.setClearColor(new three_module.Color(color));\n        renderer.setSize(W, H);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        console.log("three.js revision: ", three_module.REVISION);\n    };\n    Common.initHelper = function (scene) {\n        var axesHelper = new three_module.AxesHelper(30);\n        scene.add(axesHelper);\n    };\n    Common.render = function (control, renderer, scene, camera, onBeforeRender) {\n        var rendering = function () {\n            if (onBeforeRender) {\n                onBeforeRender();\n            }\n            control.update();\n            renderer.render(scene, camera);\n            requestAnimationFrame(rendering);\n        };\n        rendering();\n    };\n    Common.addRendererInfo = function () {\n        var info = document.createElement("div");\n        document.body.appendChild(info);\n        return info;\n    };\n    Common.updateRendererInfo = function (div, info) {\n        div.innerText = JSON.stringify(info);\n    };\n    return Common;\n}());\n\n\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/libs/stats.module.js\nvar stats_module = __webpack_require__(4533);\n;// CONCATENATED MODULE: ./src/MergedGeometryStudy.ts\n\n\n\nvar MergedGeometryStudy = /** @class */ (function () {\n    function MergedGeometryStudy() {\n        this.initStats();\n        var scene = Common.initScene();\n        var camera = Common.initCamera(scene, MergedGeometryStudy.W, MergedGeometryStudy.H);\n        this.renderer = Common.initRenderer(MergedGeometryStudy.W, MergedGeometryStudy.H);\n        var object = this.initMesh(scene);\n        var info = Common.addRendererInfo();\n        this.render(object, info, this.renderer, scene, camera);\n    }\n    MergedGeometryStudy.prototype.initStats = function () {\n        this.stats = new stats_module/* default */.A();\n        this.stats.showPanel(0);\n        document.body.appendChild(this.stats.dom);\n    };\n    MergedGeometryStudy.prototype.initMesh = function (scene) {\n        // Override me\n        return new three_module.Group();\n    };\n    MergedGeometryStudy.prototype.render = function (mergedMesh, infoContainer, renderer, scene, camera) {\n        var _this = this;\n        var rendering = function () {\n            mergedMesh.rotation.x += 0.01;\n            mergedMesh.rotation.y += 0.01;\n            mergedMesh.rotation.z += 0.01;\n            _this.stats.begin();\n            renderer.render(scene, camera);\n            _this.stats.end();\n            Common.updateRendererInfo(infoContainer, renderer.info.render);\n            requestAnimationFrame(rendering);\n        };\n        rendering();\n    };\n    MergedGeometryStudy.W = 1280;\n    MergedGeometryStudy.H = 800;\n    return MergedGeometryStudy;\n}());\n\n\n;// CONCATENATED MODULE: ./src/StudyMergedGeometryInteractive.ts\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== "function" && b !== null)\n            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar StudyMergedGeometryInteractive = /** @class */ (function (_super) {\n    __extends(StudyMergedGeometryInteractive, _super);\n    function StudyMergedGeometryInteractive() {\n        var _this = _super.call(this) || this;\n        _this.raycaster = new three_module.Raycaster();\n        _this.mousePoint = new three_module.Vector2();\n        _this.onPointerMove = function (e) {\n            _this.mousePoint.x =\n                (e.clientX / parseInt(_this.renderer.domElement.style.width)) * 2 - 1;\n            _this.mousePoint.y =\n                -(e.clientY / parseInt(_this.renderer.domElement.style.height)) * 2 + 1;\n        };\n        document.addEventListener("pointermove", _this.onPointerMove);\n        return _this;\n    }\n    StudyMergedGeometryInteractive.prototype.initMesh = function (scene) {\n        var geometryArray = [];\n        var size = 1;\n        var margin = 0.3;\n        var pitch = size + margin;\n        var numCube = 25;\n        var offset = (numCube * pitch) / 2;\n        var generateCube = function (x, y, z, idCount) {\n            var geometry = new three_module.BoxGeometry();\n            var positions = geometry.getAttribute("position");\n            var count = positions.count;\n            geometry.setAttribute("color", new three_module.BufferAttribute(new Float32Array(count * 4), 4));\n            geometry.setAttribute("originalColor", new three_module.BufferAttribute(new Float32Array(count * 4), 4));\n            geometry.setAttribute("mesh_id", new three_module.BufferAttribute(new Float32Array(count), 1));\n            var colors = geometry.getAttribute("color");\n            var originalColor = geometry.getAttribute("originalColor");\n            var idAttribute = geometry.getAttribute("mesh_id");\n            for (var i = 0; i < count; i++) {\n                positions.setXYZ(i, positions.getX(i) + x * pitch - offset, positions.getY(i) + y * pitch - offset, positions.getZ(i) + z * pitch - offset);\n                colors.setXYZW(i, x / numCube, y / numCube, z / numCube, 0.1);\n                originalColor.setXYZW(i, x / numCube, y / numCube, z / numCube, 0.1);\n                idAttribute.setX(i, idCount);\n            }\n            geometryArray.push(geometry);\n        };\n        var idCounter = 0;\n        for (var x = 0; x < numCube; x++) {\n            for (var y = 0; y < numCube; y++) {\n                for (var z = 0; z < numCube; z++) {\n                    generateCube(x, y, z, idCounter);\n                    idCounter++;\n                }\n            }\n        }\n        var mergedMesh = new three_module.Mesh((0,BufferGeometryUtils/* mergeGeometries */.pP)(geometryArray), new three_module.MeshBasicMaterial({ transparent: true, vertexColors: true }));\n        scene.add(mergedMesh);\n        return mergedMesh;\n    };\n    StudyMergedGeometryInteractive.prototype.render = function (mergedMesh, infoContainer, renderer, scene, camera) {\n        var _this = this;\n        var rendering = function () {\n            var _a, _b;\n            var speed = 0.01;\n            mergedMesh.rotation.x += speed;\n            mergedMesh.rotation.y += speed;\n            mergedMesh.rotation.z += speed;\n            mergedMesh.updateMatrix();\n            _this.stats.begin();\n            (_a = _this.raycaster) === null || _a === void 0 ? void 0 : _a.setFromCamera(_this.mousePoint, camera);\n            var intersects = (_b = _this.raycaster) === null || _b === void 0 ? void 0 : _b.intersectObject(mergedMesh, false);\n            if ((intersects === null || intersects === void 0 ? void 0 : intersects.length) > 0) {\n                _this.updateIntersect(intersects[0], mergedMesh.geometry);\n            }\n            renderer.render(scene, camera);\n            _this.stats.end();\n            Common.updateRendererInfo(infoContainer, renderer.info.render);\n            requestAnimationFrame(rendering);\n        };\n        rendering();\n    };\n    StudyMergedGeometryInteractive.prototype.updateIntersect = function (intersect, geo) {\n        var idAttribute = geo.getAttribute("mesh_id");\n        var face = intersect.face;\n        var meshID = idAttribute.getX(face.a);\n        if (idAttribute.getX(face.a) !== idAttribute.getX(face.b) ||\n            idAttribute.getX(face.a) !== idAttribute.getX(face.c)) {\n            console.log(idAttribute.getX(face.a), idAttribute.getX(face.b), idAttribute.getX(face.c));\n        }\n        var colorAttribute = geo.getAttribute("color");\n        var originalColorAttribute = geo.getAttribute("originalColor");\n        var count = idAttribute.count;\n        for (var i = 0; i < count; i++) {\n            if (idAttribute.getX(i) === meshID) {\n                colorAttribute.setXYZW(i, 1, 1, 1, 1);\n            }\n            else {\n                colorAttribute.setXYZW(i, originalColorAttribute.getX(i), originalColorAttribute.getY(i), originalColorAttribute.getZ(i), originalColorAttribute.getW(i));\n            }\n        }\n        colorAttribute.needsUpdate = true;\n    };\n    StudyMergedGeometryInteractive.W = 1280;\n    StudyMergedGeometryInteractive.H = 800;\n    return StudyMergedGeometryInteractive;\n}(MergedGeometryStudy));\n\nwindow.onload = function () {\n    var study = new StudyMergedGeometryInteractive();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7524\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(F.exports,F,F.exports,__webpack_require__),F.loaded=!0,F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,B)=>{if(!U){var e=1/0;for(I=0;I<deferred.length;I++){for(var[U,F,B]=deferred[I],n=!0,s=0;s<U.length;s++)(!1&B||e>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[s])))?U.splice(s--,1):(n=!1,B<e&&(e=B));if(n){deferred.splice(I--,1);var t=F();void 0!==t&&(Q=t)}}return Q}B=B||0;for(var I=deferred.length;I>0&&deferred[I-1][2]>B;I--)deferred[I]=deferred[I-1];deferred[I]=[U,F,B]},__webpack_require__.n=Q=>{var U=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(U,{a:U}),U},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.j=878,(()=>{var Q={878:0};__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var B,e,[n,s,t]=F,I=0;if(n.some((U=>0!==Q[U]))){for(B in s)__webpack_require__.o(s,B)&&(__webpack_require__.m[B]=s[B]);if(t)var g=t(__webpack_require__)}for(U&&U(F);I<n.length;I++)e=n[I],__webpack_require__.o(Q,e)&&Q[e]&&Q[e][0](),Q[e]=0;return __webpack_require__.O(g)},F=self.webpackChunkthreejs_lab=self.webpackChunkthreejs_lab||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[121],(()=>__webpack_require__(7524)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();