(()=>{"use strict";var __webpack_modules__={2187:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// UNUSED EXPORTS: StudyBufferGeometry\n\n// EXTERNAL MODULE: ./node_modules/lil-gui/dist/lil-gui.esm.js\nvar lil_gui_esm = __webpack_require__(7429);\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(6075);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/libs/stats.module.js\nvar stats_module = __webpack_require__(2304);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(8012);\n;// CONCATENATED MODULE: ./src/Common.ts\n\n\nclass Common {\n    static initScene() {\n        const scene = new three_module.Scene();\n        return scene;\n    }\n    static initLight(scene) {\n        const ambientLight = new three_module.AmbientLight(0xffffff, 1.0);\n        scene.add(ambientLight);\n        return ambientLight;\n    }\n    static initCamera(scene, W, H, near = 1, far = 400) {\n        const camera = new three_module.PerspectiveCamera(45, W / H, near, far);\n        camera.position.set(0, 0, 100);\n        camera.updateMatrixWorld(false);\n        scene.add(camera);\n        return camera;\n    }\n    static initControl(camera, render) {\n        let domElement;\n        if (render) {\n            domElement = render.domElement;\n        }\n        const control = new OrbitControls/* OrbitControls */.z(camera, domElement);\n        control.update();\n        return control;\n    }\n    static initRenderer(W, H, color = 0x000000, id = "webgl-canvas", antialias = true) {\n        const renderer = new three_module.WebGLRenderer({\n            canvas: document.getElementById(id),\n            antialias: antialias,\n        });\n        renderer.setClearColor(new three_module.Color(color));\n        renderer.setSize(W, H);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        return renderer;\n    }\n    static initHelper(scene) {\n        const axesHelper = new three_module.AxesHelper(30);\n        scene.add(axesHelper);\n    }\n    static render(control, renderer, scene, camera, onBeforeRender) {\n        const rendering = () => {\n            if (onBeforeRender) {\n                onBeforeRender();\n            }\n            control.update();\n            renderer.render(scene, camera);\n            requestAnimationFrame(rendering);\n        };\n        rendering();\n    }\n    static addRendererInfo() {\n        const info = document.createElement("div");\n        document.body.appendChild(info);\n        return info;\n    }\n    static updateRendererInfo(div, info) {\n        div.innerText = JSON.stringify(info);\n    }\n}\n\n;// CONCATENATED MODULE: ./src/StudyBufferGeometry.ts\n\n\n\n\n/**\n * BufferGeometryとGeometryの生成処理時間の比較を行う\n */\nclass StudyBufferGeometry {\n    constructor() {\n        this.initStats();\n        this.initGUI();\n        const scene = Common.initScene();\n        scene.fog = new three_module.Fog(0x000000, 80, 160);\n        Common.initLight(scene);\n        const camera = Common.initCamera(scene, StudyBufferGeometry.W, StudyBufferGeometry.H);\n        const renderer = Common.initRenderer(StudyBufferGeometry.W, StudyBufferGeometry.H);\n        const control = Common.initControl(camera, renderer);\n        Common.initHelper(scene);\n        this.initPointLight(scene);\n        this.initMesh(scene);\n        this.refreshGeometry();\n        this.render(control, renderer, scene, camera);\n    }\n    initStats() {\n        this.stats = new stats_module/* default */.Z();\n        this.stats.showPanel(1);\n        document.body.appendChild(this.stats.dom);\n        this.geoStats = this.stats.addPanel(new stats_module/* default */.Z.Panel("ms, geo init", "#ff8", "#221"));\n    }\n    initGUI() {\n        this.params = {\n            isBufferGeometry: true,\n            updateGeometry: true,\n        };\n        const gui = new lil_gui_esm/* GUI */.XS();\n        gui.add(this.params, "isBufferGeometry").onChange(() => {\n            this.refreshGeometry();\n        });\n        gui.add(this.params, "updateGeometry").onChange(() => {\n            this.refreshGeometry();\n        });\n    }\n    initPointLight(scene) {\n        const spot = new three_module.PointLight(0xffffff, 15000);\n        spot.position.set(10, 20, 30);\n        scene.add(spot);\n        const helper = new three_module.PointLightHelper(spot);\n        scene.add(helper);\n    }\n    initMesh(scene) {\n        this.mat = new three_module.MeshLambertMaterial();\n        this.mat.color = new three_module.Color(0xff6666);\n        this.mesh = new three_module.Mesh();\n        this.mesh.material = this.mat;\n        scene.add(this.mesh);\n    }\n    refreshGeometry() {\n        const now = performance.now();\n        const seg = Math.pow(2, 8);\n        let geo;\n        if (this.params.isBufferGeometry) {\n            geo = new three_module.SphereGeometry(10, seg, seg);\n        }\n        else {\n            geo = new three_module.SphereGeometry(10, seg, seg);\n        }\n        this.mesh.geometry = geo;\n        const onGeo = performance.now();\n        this.geoStats.update(onGeo - now, 1000);\n    }\n    render(control, renderer, scene, camera) {\n        const rendering = () => {\n            this.stats.begin();\n            control.update();\n            if (this.params.updateGeometry) {\n                this.refreshGeometry();\n            }\n            renderer.render(scene, camera);\n            this.stats.end();\n            requestAnimationFrame(rendering);\n        };\n        rendering();\n    }\n}\nStudyBufferGeometry.W = 640;\nStudyBufferGeometry.H = 480;\nwindow.onload = () => {\n    const study = new StudyBufferGeometry();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2187\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(F.exports,F,F.exports,__webpack_require__),F.loaded=!0,F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,B)=>{if(!U){var e=1/0;for(t=0;t<deferred.length;t++){for(var[U,F,B]=deferred[t],s=!0,n=0;n<U.length;n++)(!1&B||e>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[n])))?U.splice(n--,1):(s=!1,B<e&&(e=B));if(s){deferred.splice(t--,1);var c=F();void 0!==c&&(Q=c)}}return Q}B=B||0;for(var t=deferred.length;t>0&&deferred[t-1][2]>B;t--)deferred[t]=deferred[t-1];deferred[t]=[U,F,B]},__webpack_require__.n=Q=>{var U=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(U,{a:U}),U},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.j=452,(()=>{var Q={452:0};__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var B,e,[s,n,c]=F,t=0;if(s.some((U=>0!==Q[U]))){for(B in n)__webpack_require__.o(n,B)&&(__webpack_require__.m[B]=n[B]);if(c)var l=c(__webpack_require__)}for(U&&U(F);t<s.length;t++)e=s[t],__webpack_require__.o(Q,e)&&Q[e]&&Q[e][0](),Q[e]=0;return __webpack_require__.O(l)},F=self.webpackChunkthreejs_lab=self.webpackChunkthreejs_lab||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(2187)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();