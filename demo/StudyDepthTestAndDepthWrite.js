(()=>{"use strict";var __webpack_modules__={64:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// UNUSED EXPORTS: StudyDepthTestAndDepthWrite\n\n// EXTERNAL MODULE: ./node_modules/lil-gui/dist/lil-gui.esm.js\nvar lil_gui_esm = __webpack_require__(638);\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(6753);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(3580);\n;// CONCATENATED MODULE: ./src/Common.ts\n\n\nvar Common = /** @class */ (function () {\n    function Common() {\n    }\n    Common.initScene = function () {\n        var scene = new three_module.Scene();\n        return scene;\n    };\n    Common.initLight = function (scene) {\n        var ambientLight = new three_module.AmbientLight(0xffffff, 1.0);\n        scene.add(ambientLight);\n        return ambientLight;\n    };\n    Common.initCamera = function (scene, W, H, near, far) {\n        if (near === void 0) { near = 1; }\n        if (far === void 0) { far = 400; }\n        var camera = new three_module.PerspectiveCamera(45, W / H, near, far);\n        camera.position.set(0, 0, 100);\n        camera.updateMatrixWorld(false);\n        scene.add(camera);\n        return camera;\n    };\n    Common.initControl = function (camera, render) {\n        var domElement;\n        if (render) {\n            domElement = render.domElement;\n        }\n        var control = new OrbitControls/* OrbitControls */.N(camera, domElement);\n        control.update();\n        return control;\n    };\n    Common.initRenderer = function (W, H, color, id, antialias) {\n        if (color === void 0) { color = 0x000000; }\n        if (id === void 0) { id = "webgl-canvas"; }\n        if (antialias === void 0) { antialias = true; }\n        var renderer = new three_module.WebGLRenderer({\n            canvas: document.getElementById(id),\n            antialias: antialias,\n        });\n        this.initRendererSettings(renderer, color, W, H);\n        return renderer;\n    };\n    Common.initRendererSettings = function (renderer, color, W, H) {\n        renderer.setClearColor(new three_module.Color(color));\n        renderer.setSize(W, H);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        console.log("three.js revision: ", three_module.REVISION);\n    };\n    Common.initHelper = function (scene) {\n        var axesHelper = new three_module.AxesHelper(30);\n        scene.add(axesHelper);\n    };\n    Common.render = function (control, renderer, scene, camera, onBeforeRender) {\n        var rendering = function () {\n            if (onBeforeRender) {\n                onBeforeRender();\n            }\n            control.update();\n            renderer.render(scene, camera);\n            requestAnimationFrame(rendering);\n        };\n        rendering();\n    };\n    Common.addRendererInfo = function () {\n        var info = document.createElement("div");\n        document.body.appendChild(info);\n        return info;\n    };\n    Common.updateRendererInfo = function (div, info) {\n        div.innerText = JSON.stringify(info);\n    };\n    return Common;\n}());\n\n\n;// CONCATENATED MODULE: ./src/StudyDepthTestAndDepthWrite.ts\n\n\n\nvar StudyDepthTestAndDepthWrite = /** @class */ (function () {\n    function StudyDepthTestAndDepthWrite() {\n        this.scene = Common.initScene();\n        Common.initLight(this.scene);\n        var camera = Common.initCamera(this.scene, StudyDepthTestAndDepthWrite.W, StudyDepthTestAndDepthWrite.H);\n        var renderer = Common.initRenderer(StudyDepthTestAndDepthWrite.W, StudyDepthTestAndDepthWrite.H);\n        var control = Common.initControl(camera, renderer);\n        Common.initHelper(this.scene);\n        this.initObject(this.scene);\n        Common.render(control, renderer, this.scene, camera);\n        this.initGUI();\n    }\n    StudyDepthTestAndDepthWrite.prototype.initObject = function (scene) {\n        var spot = new three_module.PointLight(0xffffff, 10000);\n        spot.position.set(10, 20, 30);\n        scene.add(spot);\n        var helper = new three_module.PointLightHelper(spot);\n        scene.add(helper);\n        this.swapSphere(false);\n        this.switchSatelliteShift(false);\n    };\n    /**\n     * 中央の球体2つのシーンへの登録順のみを入れ替える。\n     * @param isSwap\n     */\n    StudyDepthTestAndDepthWrite.prototype.swapSphere = function (isSwap) {\n        var _a, _b, _c, _d;\n        if (this.inner) {\n            (_b = (_a = this.inner) === null || _a === void 0 ? void 0 : _a.parent) === null || _b === void 0 ? void 0 : _b.remove(this.inner);\n            (_d = (_c = this.outer) === null || _c === void 0 ? void 0 : _c.parent) === null || _d === void 0 ? void 0 : _d.remove(this.outer);\n            this.inner = undefined;\n            this.outer = undefined;\n        }\n        var self = StudyDepthTestAndDepthWrite;\n        if (!isSwap) {\n            this.outer = self.initSphere(15, 0xff00ff, this.scene);\n            this.inner = self.initSphere(10, 0xffff00, this.scene);\n        }\n        else {\n            this.inner = self.initSphere(10, 0xffff00, this.scene);\n            this.outer = self.initSphere(15, 0xff00ff, this.scene);\n        }\n    };\n    StudyDepthTestAndDepthWrite.initSphere = function (r, color, scene) {\n        var geo = new three_module.SphereGeometry(r, 64, 64);\n        var mat = new three_module.MeshPhongMaterial({\n            fog: scene.fog !== undefined,\n            transparent: true,\n            opacity: 0.5,\n            color: new three_module.Color(color),\n        });\n        var mesh = new three_module.Mesh(geo, mat);\n        scene.add(mesh);\n        return mesh;\n    };\n    StudyDepthTestAndDepthWrite.prototype.switchDepthTest = function (val) {\n        var spheres = [this.outer, this.inner, this.satellite];\n        spheres.forEach(function (sphere) {\n            (sphere === null || sphere === void 0 ? void 0 : sphere.material).depthTest = val;\n        });\n    };\n    StudyDepthTestAndDepthWrite.prototype.switchDepthWrite = function (val) {\n        var spheres = [this.outer, this.inner, this.satellite];\n        spheres.forEach(function (sphere) {\n            (sphere === null || sphere === void 0 ? void 0 : sphere.material).depthWrite = val;\n        });\n    };\n    StudyDepthTestAndDepthWrite.prototype.switchSatelliteShift = function (isMeshPosition) {\n        var _a;\n        if (this.satellite) {\n            (_a = this.satellite.parent) === null || _a === void 0 ? void 0 : _a.remove(this.satellite);\n            this.satellite = undefined;\n        }\n        var self = StudyDepthTestAndDepthWrite;\n        this.satellite = self.initSphere(5, 0xffffff, this.scene);\n        var satelliteX = 30;\n        if (isMeshPosition) {\n            this.satellite.position.x = satelliteX;\n        }\n        else {\n            this.satellite.geometry.translate(satelliteX, 0, 0);\n        }\n    };\n    StudyDepthTestAndDepthWrite.prototype.initGUI = function () {\n        var _this = this;\n        var prop = {\n            alpha: 0.5,\n            satelliteShiftIsMeshPosition: false,\n            depthTest: true,\n            depthWrite: true,\n        };\n        var gui = new lil_gui_esm/* GUI */.cL();\n        //外部ボールがメッシュポジションか、ジオメトリシフトかで結果が変わる。\n        var meshFolder = gui.addFolder("Mesh");\n        meshFolder.add(prop, "alpha", 0.0, 1.0).onChange(function (val) {\n            var spheres = [_this.outer, _this.inner, _this.satellite];\n            spheres.forEach(function (sphere) {\n                (sphere === null || sphere === void 0 ? void 0 : sphere.material).opacity = val;\n            });\n        });\n        meshFolder.open();\n        var satelliteFolder = gui.addFolder("satellite");\n        satelliteFolder\n            .add(prop, "satelliteShiftIsMeshPosition")\n            .onChange(function (val) {\n            _this.switchSatelliteShift(val);\n        });\n        satelliteFolder.open();\n        var depthFolder = gui.addFolder("depth");\n        depthFolder.add(prop, "depthTest").onChange(function (val) {\n            _this.switchDepthTest(val);\n        });\n        depthFolder.add(prop, "depthWrite").onChange(function (val) {\n            _this.switchDepthWrite(val);\n        });\n        depthFolder.open();\n        var innerFolder = gui.addFolder("Inner Sphere");\n        var innerParam = {\n            x: 0.0,\n        };\n        innerFolder.add(innerParam, "x", 0, 20).onChange(function (val) {\n            if (_this.inner) {\n                _this.inner.position.x = val;\n            }\n        });\n        innerFolder.open();\n        var renderOrderFolder = gui.addFolder("Render Order");\n        var orders = {\n            inner: 0.0,\n            outer: 0.0,\n            satellite: 0.0,\n        };\n        var min = -3;\n        var max = 3;\n        var step = 1;\n        renderOrderFolder\n            .add(orders, "inner", min, max)\n            .step(step)\n            .onChange(function (val) {\n            if (_this.inner) {\n                _this.inner.renderOrder = val;\n            }\n        });\n        renderOrderFolder\n            .add(orders, "outer", min, max)\n            .step(step)\n            .onChange(function (val) {\n            if (_this.outer) {\n                _this.outer.renderOrder = val;\n            }\n        });\n        renderOrderFolder\n            .add(orders, "satellite", min, max)\n            .step(step)\n            .onChange(function (val) {\n            if (_this.satellite)\n                _this.satellite.renderOrder = val;\n        });\n        renderOrderFolder.open();\n        var sceneFolder = gui.addFolder("Scene");\n        var sceneParam = {\n            SwapSphere: false,\n        };\n        sceneFolder.add(sceneParam, "SwapSphere").onChange(function (val) {\n            _this.swapSphere(val);\n            if (_this.inner)\n                _this.inner.position.x = innerParam.x;\n        });\n        sceneFolder.open();\n    };\n    StudyDepthTestAndDepthWrite.W = 640;\n    StudyDepthTestAndDepthWrite.H = 480;\n    return StudyDepthTestAndDepthWrite;\n}());\n\nwindow.onload = function () {\n    var study = new StudyDepthTestAndDepthWrite();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///64\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var F=__webpack_module_cache__[Q];if(void 0!==F)return F.exports;var U=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(U.exports,U,U.exports,__webpack_require__),U.loaded=!0,U.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,F,U,B)=>{if(!F){var e=1/0;for(l=0;l<deferred.length;l++){for(var[F,U,B]=deferred[l],s=!0,n=0;n<F.length;n++)(!1&B||e>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](F[n])))?F.splice(n--,1):(s=!1,B<e&&(e=B));if(s){deferred.splice(l--,1);var t=U();void 0!==t&&(Q=t)}}return Q}B=B||0;for(var l=deferred.length;l>0&&deferred[l-1][2]>B;l--)deferred[l]=deferred[l-1];deferred[l]=[F,U,B]},__webpack_require__.n=Q=>{var F=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(F,{a:F}),F},__webpack_require__.d=(Q,F)=>{for(var U in F)__webpack_require__.o(F,U)&&!__webpack_require__.o(Q,U)&&Object.defineProperty(Q,U,{enumerable:!0,get:F[U]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.j=592,(()=>{var Q={592:0};__webpack_require__.O.j=F=>0===Q[F];var F=(F,U)=>{var B,e,[s,n,t]=U,l=0;if(s.some((F=>0!==Q[F]))){for(B in n)__webpack_require__.o(n,B)&&(__webpack_require__.m[B]=n[B]);if(t)var i=t(__webpack_require__)}for(F&&F(U);l<s.length;l++)e=s[l],__webpack_require__.o(Q,e)&&Q[e]&&Q[e][0](),Q[e]=0;return __webpack_require__.O(i)},U=self.webpackChunkthreejs_lab=self.webpackChunkthreejs_lab||[];U.forEach(F.bind(null,0)),U.push=F.bind(null,U.push.bind(U))})();var __webpack_exports__=__webpack_require__.O(void 0,[121],(()=>__webpack_require__(64)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();