(()=>{"use strict";var __webpack_modules__={7124:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// UNUSED EXPORTS: StudyDepthTestAndDepthWrite\n\n// EXTERNAL MODULE: ./node_modules/lil-gui/dist/lil-gui.esm.js\nvar lil_gui_esm = __webpack_require__(7429);\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(6075);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(8012);\n;// CONCATENATED MODULE: ./src/Common.ts\n\n\nclass Common {\n    static initScene() {\n        const scene = new three_module.Scene();\n        return scene;\n    }\n    static initLight(scene) {\n        const ambientLight = new three_module.AmbientLight(0xffffff, 1.0);\n        scene.add(ambientLight);\n        return ambientLight;\n    }\n    static initCamera(scene, W, H, near = 1, far = 400) {\n        const camera = new three_module.PerspectiveCamera(45, W / H, near, far);\n        camera.position.set(0, 0, 100);\n        camera.updateMatrixWorld(false);\n        scene.add(camera);\n        return camera;\n    }\n    static initControl(camera, render) {\n        let domElement;\n        if (render) {\n            domElement = render.domElement;\n        }\n        const control = new OrbitControls/* OrbitControls */.z(camera, domElement);\n        control.update();\n        return control;\n    }\n    static initRenderer(W, H, color = 0x000000, id = "webgl-canvas", antialias = true) {\n        const renderer = new three_module.WebGLRenderer({\n            canvas: document.getElementById(id),\n            antialias: antialias,\n        });\n        renderer.setClearColor(new three_module.Color(color));\n        renderer.setSize(W, H);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        console.log("three.js revision: ", three_module.REVISION);\n        return renderer;\n    }\n    static initHelper(scene) {\n        const axesHelper = new three_module.AxesHelper(30);\n        scene.add(axesHelper);\n    }\n    static render(control, renderer, scene, camera, onBeforeRender) {\n        const rendering = () => {\n            if (onBeforeRender) {\n                onBeforeRender();\n            }\n            control.update();\n            renderer.render(scene, camera);\n            requestAnimationFrame(rendering);\n        };\n        rendering();\n    }\n    static addRendererInfo() {\n        const info = document.createElement("div");\n        document.body.appendChild(info);\n        return info;\n    }\n    static updateRendererInfo(div, info) {\n        div.innerText = JSON.stringify(info);\n    }\n}\n\n;// CONCATENATED MODULE: ./src/StudyDepthTestAndDepthWrite.ts\n\n\n\nclass StudyDepthTestAndDepthWrite {\n    constructor() {\n        this.scene = Common.initScene();\n        Common.initLight(this.scene);\n        const camera = Common.initCamera(this.scene, StudyDepthTestAndDepthWrite.W, StudyDepthTestAndDepthWrite.H);\n        const renderer = Common.initRenderer(StudyDepthTestAndDepthWrite.W, StudyDepthTestAndDepthWrite.H);\n        const control = Common.initControl(camera, renderer);\n        Common.initHelper(this.scene);\n        this.initObject(this.scene);\n        Common.render(control, renderer, this.scene, camera);\n        this.initGUI();\n    }\n    initObject(scene) {\n        const spot = new three_module.PointLight(0xffffff, 10000);\n        spot.position.set(10, 20, 30);\n        scene.add(spot);\n        const helper = new three_module.PointLightHelper(spot);\n        scene.add(helper);\n        this.swapSphere(false);\n        this.switchSatelliteShift(false);\n    }\n    /**\n     * 中央の球体2つのシーンへの登録順のみを入れ替える。\n     * @param isSwap\n     */\n    swapSphere(isSwap) {\n        var _a, _b, _c, _d;\n        if (this.inner) {\n            (_b = (_a = this.inner) === null || _a === void 0 ? void 0 : _a.parent) === null || _b === void 0 ? void 0 : _b.remove(this.inner);\n            (_d = (_c = this.outer) === null || _c === void 0 ? void 0 : _c.parent) === null || _d === void 0 ? void 0 : _d.remove(this.outer);\n            this.inner = undefined;\n            this.outer = undefined;\n        }\n        const self = StudyDepthTestAndDepthWrite;\n        if (!isSwap) {\n            this.outer = self.initSphere(15, 0xff00ff, this.scene);\n            this.inner = self.initSphere(10, 0xffff00, this.scene);\n        }\n        else {\n            this.inner = self.initSphere(10, 0xffff00, this.scene);\n            this.outer = self.initSphere(15, 0xff00ff, this.scene);\n        }\n    }\n    static initSphere(r, color, scene) {\n        const geo = new three_module.SphereGeometry(r, 64, 64);\n        const mat = new three_module.MeshPhongMaterial({\n            fog: scene.fog !== undefined,\n            transparent: true,\n            opacity: 0.5,\n            color: new three_module.Color(color),\n        });\n        const mesh = new three_module.Mesh(geo, mat);\n        scene.add(mesh);\n        return mesh;\n    }\n    switchDepthTest(val) {\n        const spheres = [this.outer, this.inner, this.satellite];\n        spheres.forEach((sphere) => {\n            (sphere === null || sphere === void 0 ? void 0 : sphere.material).depthTest = val;\n        });\n    }\n    switchDepthWrite(val) {\n        const spheres = [this.outer, this.inner, this.satellite];\n        spheres.forEach((sphere) => {\n            (sphere === null || sphere === void 0 ? void 0 : sphere.material).depthWrite = val;\n        });\n    }\n    switchSatelliteShift(isMeshPosition) {\n        var _a;\n        if (this.satellite) {\n            (_a = this.satellite.parent) === null || _a === void 0 ? void 0 : _a.remove(this.satellite);\n            this.satellite = undefined;\n        }\n        const self = StudyDepthTestAndDepthWrite;\n        this.satellite = self.initSphere(5, 0xffffff, this.scene);\n        const satelliteX = 30;\n        if (isMeshPosition) {\n            this.satellite.position.x = satelliteX;\n        }\n        else {\n            this.satellite.geometry.translate(satelliteX, 0, 0);\n        }\n    }\n    initGUI() {\n        const prop = {\n            alpha: 0.5,\n            satelliteShiftIsMeshPosition: false,\n            depthTest: true,\n            depthWrite: true,\n        };\n        const gui = new lil_gui_esm/* GUI */.XS();\n        //外部ボールがメッシュポジションか、ジオメトリシフトかで結果が変わる。\n        const meshFolder = gui.addFolder("Mesh");\n        meshFolder.add(prop, "alpha", 0.0, 1.0).onChange((val) => {\n            const spheres = [this.outer, this.inner, this.satellite];\n            spheres.forEach((sphere) => {\n                (sphere === null || sphere === void 0 ? void 0 : sphere.material).opacity = val;\n            });\n        });\n        meshFolder.open();\n        const satelliteFolder = gui.addFolder("satellite");\n        satelliteFolder\n            .add(prop, "satelliteShiftIsMeshPosition")\n            .onChange((val) => {\n            this.switchSatelliteShift(val);\n        });\n        satelliteFolder.open();\n        const depthFolder = gui.addFolder("depth");\n        depthFolder.add(prop, "depthTest").onChange((val) => {\n            this.switchDepthTest(val);\n        });\n        depthFolder.add(prop, "depthWrite").onChange((val) => {\n            this.switchDepthWrite(val);\n        });\n        depthFolder.open();\n        const innerFolder = gui.addFolder("Inner Sphere");\n        const innerParam = {\n            x: 0.0,\n        };\n        innerFolder.add(innerParam, "x", 0, 20).onChange((val) => {\n            if (this.inner) {\n                this.inner.position.x = val;\n            }\n        });\n        innerFolder.open();\n        const renderOrderFolder = gui.addFolder("Render Order");\n        const orders = {\n            inner: 0.0,\n            outer: 0.0,\n            satellite: 0.0,\n        };\n        const min = -3;\n        const max = 3;\n        const step = 1;\n        renderOrderFolder\n            .add(orders, "inner", min, max)\n            .step(step)\n            .onChange((val) => {\n            if (this.inner) {\n                this.inner.renderOrder = val;\n            }\n        });\n        renderOrderFolder\n            .add(orders, "outer", min, max)\n            .step(step)\n            .onChange((val) => {\n            if (this.outer) {\n                this.outer.renderOrder = val;\n            }\n        });\n        renderOrderFolder\n            .add(orders, "satellite", min, max)\n            .step(step)\n            .onChange((val) => {\n            if (this.satellite)\n                this.satellite.renderOrder = val;\n        });\n        renderOrderFolder.open();\n        const sceneFolder = gui.addFolder("Scene");\n        const sceneParam = {\n            SwapSphere: false,\n        };\n        sceneFolder.add(sceneParam, "SwapSphere").onChange((val) => {\n            this.swapSphere(val);\n            if (this.inner)\n                this.inner.position.x = innerParam.x;\n        });\n        sceneFolder.open();\n    }\n}\nStudyDepthTestAndDepthWrite.W = 640;\nStudyDepthTestAndDepthWrite.H = 480;\nwindow.onload = () => {\n    const study = new StudyDepthTestAndDepthWrite();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7124\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(F.exports,F,F.exports,__webpack_require__),F.loaded=!0,F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,B)=>{if(!U){var s=1/0;for(x=0;x<deferred.length;x++){for(var[U,F,B]=deferred[x],e=!0,n=0;n<U.length;n++)(!1&B||s>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[n])))?U.splice(n--,1):(e=!1,B<s&&(s=B));if(e){deferred.splice(x--,1);var l=F();void 0!==l&&(Q=l)}}return Q}B=B||0;for(var x=deferred.length;x>0&&deferred[x-1][2]>B;x--)deferred[x]=deferred[x-1];deferred[x]=[U,F,B]},__webpack_require__.n=Q=>{var U=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(U,{a:U}),U},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.j=752,(()=>{var Q={752:0};__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var B,s,[e,n,l]=F,x=0;if(e.some((U=>0!==Q[U]))){for(B in n)__webpack_require__.o(n,B)&&(__webpack_require__.m[B]=n[B]);if(l)var t=l(__webpack_require__)}for(U&&U(F);x<e.length;x++)s=e[x],__webpack_require__.o(Q,s)&&Q[s]&&Q[s][0](),Q[s]=0;return __webpack_require__.O(t)},F=self.webpackChunkthreejs_lab=self.webpackChunkthreejs_lab||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(7124)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();