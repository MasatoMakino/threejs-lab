(()=>{"use strict";var __webpack_modules__={1524:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// UNUSED EXPORTS: Study\n\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(6075);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(8012);\n;// CONCATENATED MODULE: ./src/Common.ts\n\n\nclass Common {\n    static initScene() {\n        const scene = new three_module.Scene();\n        return scene;\n    }\n    static initLight(scene) {\n        const ambientLight = new three_module.AmbientLight(0xffffff, 1.0);\n        scene.add(ambientLight);\n        return ambientLight;\n    }\n    static initCamera(scene, W, H, near = 1, far = 400) {\n        const camera = new three_module.PerspectiveCamera(45, W / H, near, far);\n        camera.position.set(0, 0, 100);\n        camera.updateMatrixWorld(false);\n        scene.add(camera);\n        return camera;\n    }\n    static initControl(camera, render) {\n        let domElement;\n        if (render) {\n            domElement = render.domElement;\n        }\n        const control = new OrbitControls/* OrbitControls */.z(camera, domElement);\n        control.update();\n        return control;\n    }\n    static initRenderer(W, H, color = 0x000000, id = "webgl-canvas", antialias = true) {\n        const renderer = new three_module.WebGLRenderer({\n            canvas: document.getElementById(id),\n            antialias: antialias,\n        });\n        renderer.setClearColor(new three_module.Color(color));\n        renderer.setSize(W, H);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        return renderer;\n    }\n    static initHelper(scene) {\n        const axesHelper = new three_module.AxesHelper(30);\n        scene.add(axesHelper);\n    }\n    static render(control, renderer, scene, camera, onBeforeRender) {\n        const rendering = () => {\n            if (onBeforeRender) {\n                onBeforeRender();\n            }\n            control.update();\n            renderer.render(scene, camera);\n            requestAnimationFrame(rendering);\n        };\n        rendering();\n    }\n    static addRendererInfo() {\n        const info = document.createElement("div");\n        document.body.appendChild(info);\n        return info;\n    }\n    static updateRendererInfo(div, info) {\n        div.innerText = JSON.stringify(info);\n    }\n}\n\n// EXTERNAL MODULE: ./node_modules/lil-gui/dist/lil-gui.esm.js\nvar lil_gui_esm = __webpack_require__(7429);\n;// CONCATENATED MODULE: ./src/CommonGUI.ts\nclass CommonGUI {\n    static initColorGUI(folder, mat, propName = "color") {\n        const prop = {};\n        const targetColor = mat[propName];\n        prop[propName] = targetColor.getHex();\n        folder.addColor(prop, propName).onChange((val) => {\n            targetColor.setHex(val);\n        });\n    }\n    static initMaterialGUI(gui, mat, folderName = "Material") {\n        const folder = gui.addFolder(folderName);\n        this.initMaterialFolder(folder, mat);\n        if (mat.hasOwnProperty("emissive")) {\n            this.initColorGUI(folder, mat, "emissive");\n        }\n        folder.open();\n        return folder;\n    }\n    static initMaterialFolder(folder, mat) {\n        this.initColorGUI(folder, mat);\n        folder.add(mat, "transparent");\n        folder.add(mat, "opacity", 0.0, 1.0);\n    }\n    static initPlaneUVGUI(gui, geo) {\n        const uvArea = this.initUVArea();\n        const updateUV = () => {\n            const uv = geo.getAttribute("uv");\n            uv.setXY(0, uvArea.x1, uvArea.y2);\n            uv.setXY(1, uvArea.x2, uvArea.y2);\n            uv.setXY(2, uvArea.x1, uvArea.y1);\n            uv.setXY(3, uvArea.x2, uvArea.y1);\n            uv.needsUpdate = true;\n        };\n        this.initUVGUI(gui, uvArea, updateUV);\n    }\n    static initSpriteUVGUI(gui, geo) {\n        const uvArea = this.initUVArea();\n        const updateUV = () => {\n            const uv = geo.getAttribute("uv");\n            uv.setXY(0, uvArea.x1, uvArea.y1);\n            uv.setXY(1, uvArea.x2, uvArea.y1);\n            uv.setXY(2, uvArea.x2, uvArea.y2);\n            uv.setXY(3, uvArea.x1, uvArea.y2);\n            uv.needsUpdate = true;\n        };\n        this.initUVGUI(gui, uvArea, updateUV);\n    }\n    static initUVArea() {\n        return {\n            x1: 0.0,\n            y1: 0.0,\n            x2: 1.0,\n            y2: 1.0,\n        };\n    }\n    static initUVGUI(gui, uvArea, updateUV) {\n        gui.add(uvArea, "x1", 0.0, 1.0).onChange(updateUV);\n        gui.add(uvArea, "y1", 0.0, 1.0).onChange(updateUV);\n        gui.add(uvArea, "x2", 0.0, 1.0).onChange(updateUV);\n        gui.add(uvArea, "y2", 0.0, 1.0).onChange(updateUV);\n    }\n}\n\n;// CONCATENATED MODULE: ./src/StudyPlaneUVs.ts\n\n\n\n\nclass Study {\n    constructor() {\n        const scene = Common.initScene();\n        Common.initLight(scene);\n        const camera = Common.initCamera(scene, Study.W, Study.H);\n        const renderer = Common.initRenderer(Study.W, Study.H);\n        const control = Common.initControl(camera, renderer);\n        Common.initHelper(scene);\n        this.initObject(scene);\n        Common.render(control, renderer, scene, camera);\n    }\n    initObject(scene) {\n        const geo = new three_module.PlaneGeometry(10, 10);\n        const loader = new three_module.TextureLoader();\n        const texture = loader.load("./textures/uv_grid_opengl.jpg");\n        const mat = new three_module.MeshBasicMaterial({ map: texture });\n        const mesh = new three_module.Mesh(geo, mat);\n        scene.add(mesh);\n        const gui = new lil_gui_esm/* default */.ZP();\n        CommonGUI.initPlaneUVGUI(gui, geo);\n    }\n}\nStudy.W = 640;\nStudy.H = 480;\nwindow.onload = () => {\n    const study = new Study();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1524\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(F.exports,F,F.exports,__webpack_require__),F.loaded=!0,F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,B)=>{if(!U){var e=1/0;for(n=0;n<deferred.length;n++){for(var[U,F,B]=deferred[n],s=!0,x=0;x<U.length;x++)(!1&B||e>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[x])))?U.splice(x--,1):(s=!1,B<e&&(e=B));if(s){deferred.splice(n--,1);var c=F();void 0!==c&&(Q=c)}}return Q}B=B||0;for(var n=deferred.length;n>0&&deferred[n-1][2]>B;n--)deferred[n]=deferred[n-1];deferred[n]=[U,F,B]},__webpack_require__.n=Q=>{var U=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(U,{a:U}),U},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.j=333,(()=>{var Q={333:0};__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var B,e,[s,x,c]=F,n=0;if(s.some((U=>0!==Q[U]))){for(B in x)__webpack_require__.o(x,B)&&(__webpack_require__.m[B]=x[B]);if(c)var t=c(__webpack_require__)}for(U&&U(F);n<s.length;n++)e=s[n],__webpack_require__.o(Q,e)&&Q[e]&&Q[e][0](),Q[e]=0;return __webpack_require__.O(t)},F=self.webpackChunkthreejs_lab=self.webpackChunkthreejs_lab||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(1524)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();