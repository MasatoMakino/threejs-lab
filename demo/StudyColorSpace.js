(()=>{"use strict";var __webpack_modules__={673:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// UNUSED EXPORTS: Study\n\n// EXTERNAL MODULE: ./node_modules/three/build/three.webgpu.js\nvar three_webgpu = __webpack_require__(6293);\n// EXTERNAL MODULE: ./node_modules/lil-gui/dist/lil-gui.esm.js\nvar lil_gui_esm = __webpack_require__(638);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(3580);\n;// CONCATENATED MODULE: ./src/CommonWebGPU.ts\n\n\nvar Common = /** @class */ (function () {\n    function Common() {\n    }\n    Common.initScene = function () {\n        var scene = new three_webgpu/* Scene */.Z58();\n        return scene;\n    };\n    Common.initLight = function (scene) {\n        var ambientLight = new three_webgpu/* AmbientLight */.$p8(0xffffff, 1.0);\n        scene.add(ambientLight);\n        return ambientLight;\n    };\n    Common.initCamera = function (scene, W, H, near, far) {\n        if (near === void 0) { near = 1; }\n        if (far === void 0) { far = 400; }\n        var camera = new three_webgpu/* PerspectiveCamera */.ubm(45, W / H, near, far);\n        camera.position.set(0, 0, 100);\n        camera.updateMatrixWorld(false);\n        scene.add(camera);\n        return camera;\n    };\n    Common.initControl = function (camera, render) {\n        var domElement;\n        if (render) {\n            domElement = render.domElement;\n        }\n        var control = new OrbitControls/* OrbitControls */.N(camera, domElement);\n        control.update();\n        return control;\n    };\n    Common.initWebGPURenderer = function (W, H, color, id, antialias) {\n        if (color === void 0) { color = 0x000000; }\n        if (id === void 0) { id = "webgl-canvas"; }\n        if (antialias === void 0) { antialias = true; }\n        var renderer = new three_webgpu/* WebGPURenderer */.uV1({\n            canvas: document.getElementById(id),\n            antialias: antialias,\n        });\n        this.initRendererSettings(renderer, color, W, H);\n        return renderer;\n    };\n    Common.initRendererSettings = function (renderer, color, W, H) {\n        renderer.setClearColor(new three_webgpu/* Color */.Q1f(color));\n        renderer.setSize(W, H);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        console.log("three.js revision: ", three_webgpu/* REVISION */.sPf);\n    };\n    Common.initHelper = function (scene) {\n        var axesHelper = new three_webgpu/* AxesHelper */.IzY(30);\n        scene.add(axesHelper);\n    };\n    Common.render = function (control, renderer, scene, camera, onBeforeRender) {\n        var rendering = function () {\n            if (onBeforeRender) {\n                onBeforeRender();\n            }\n            control.update();\n            renderer.renderAsync(scene, camera);\n            requestAnimationFrame(rendering);\n        };\n        rendering();\n    };\n    Common.addRendererInfo = function () {\n        var info = document.createElement("div");\n        document.body.appendChild(info);\n        return info;\n    };\n    Common.updateRendererInfo = function (div, info) {\n        div.innerText = JSON.stringify(info);\n    };\n    return Common;\n}());\n\n\n;// CONCATENATED MODULE: ./src/StudyColorSpace.ts\n\n\n\nvar Study = /** @class */ (function () {\n    function Study() {\n        this.initGUI = function (materialBasic, materialHex, materialNode, multiColor, multiMaterial) {\n            var gui = new lil_gui_esm/* GUI */.cL();\n            var materialColor = {\n                r: 0.5,\n                g: 0.5,\n                b: 0.5,\n            };\n            var materialAlpha = {\n                a: 1,\n            };\n            var onChangeColor = function () {\n                materialBasic.color.setRGB(materialColor.r, materialColor.g, materialColor.b);\n                var hex = ((materialColor.r * 255) << 16) |\n                    ((materialColor.g * 255) << 8) |\n                    (materialColor.b * 255);\n                materialHex.color.setHex(hex);\n                materialNode.color.setRGB(materialColor.r, materialColor.g, materialColor.b, "srgb");\n                multiColor.set(materialNode.color.r, materialNode.color.g, materialNode.color.b);\n            };\n            gui.add(materialColor, "r", 0, 1).onChange(onChangeColor);\n            gui.add(materialColor, "g", 0, 1).onChange(onChangeColor);\n            gui.add(materialColor, "b", 0, 1).onChange(onChangeColor);\n            var updateAlpha = function () {\n                materialBasic.opacity = materialAlpha.a;\n                materialHex.opacity = materialAlpha.a;\n                materialNode.opacity = materialAlpha.a;\n                multiMaterial.opacity = materialAlpha.a;\n            };\n            gui.add(materialAlpha, "a", 0, 1).onChange(updateAlpha);\n            onChangeColor();\n            updateAlpha();\n        };\n        var scene = Common.initScene();\n        Common.initLight(scene);\n        var camera = Common.initCamera(scene, Study.W, Study.H);\n        var renderer = Common.initWebGPURenderer(Study.W, Study.H);\n        var control = Common.initControl(camera, renderer);\n        Common.initHelper(scene);\n        this.initObject(scene);\n        Common.render(control, renderer, scene, camera);\n    }\n    Study.prototype.initObject = function (scene) {\n        var geo = new three_webgpu/* PlaneGeometry */.bdM(10, 10);\n        var mat = new three_webgpu/* MeshBasicMaterial */.V9B();\n        mat.color.setRGB(1, 0, 0);\n        mat.transparent = true;\n        var mesh = new three_webgpu/* Mesh */.eaF(geo, mat);\n        scene.add(mesh);\n        var matHex = new three_webgpu/* MeshBasicMaterial */.V9B();\n        matHex.color.setHex(0xff0000);\n        matHex.transparent = true;\n        var meshHex = new three_webgpu/* Mesh */.eaF(geo, matHex);\n        scene.add(meshHex);\n        meshHex.position.set(20, 0, 0);\n        var matNode = new three_webgpu/* MeshBasicNodeMaterial */.P8l();\n        var meshNode = new three_webgpu/* Mesh */.eaF(geo, matNode);\n        matNode.color.setRGB(1, 0, 0);\n        matNode.transparent = true;\n        scene.add(meshNode);\n        meshNode.position.set(-20, 0, 0);\n        var matNodeMulti = new three_webgpu/* MeshBasicNodeMaterial */.P8l();\n        var multiColor = new three_webgpu/* Color */.Q1f(1, 0, 0);\n        var uniformColor = (0,three_webgpu/* uniform */.PiW)(multiColor);\n        matNodeMulti.colorNode = three_webgpu/* materialColor */.HMD.mul(uniformColor);\n        var meshNodeMulti = new three_webgpu/* Mesh */.eaF(geo, matNodeMulti);\n        matNodeMulti.transparent = true;\n        scene.add(meshNodeMulti);\n        meshNodeMulti.position.set(0, 20, 0);\n        this.initGUI(mat, matHex, matNode, multiColor, matNodeMulti);\n    };\n    Study.W = 640;\n    Study.H = 480;\n    return Study;\n}());\n\nwindow.onload = function () {\n    var study = new Study();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///673\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var F=__webpack_module_cache__[Q];if(void 0!==F)return F.exports;var U=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(U.exports,U,U.exports,__webpack_require__),U.loaded=!0,U.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,F,U,B)=>{if(!F){var e=1/0;for(c=0;c<deferred.length;c++){for(var[F,U,B]=deferred[c],s=!0,n=0;n<F.length;n++)(!1&B||e>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](F[n])))?F.splice(n--,1):(s=!1,B<e&&(e=B));if(s){deferred.splice(c--,1);var x=U();void 0!==x&&(Q=x)}}return Q}B=B||0;for(var c=deferred.length;c>0&&deferred[c-1][2]>B;c--)deferred[c]=deferred[c-1];deferred[c]=[F,U,B]},__webpack_require__.n=Q=>{var F=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(F,{a:F}),F},__webpack_require__.d=(Q,F)=>{for(var U in F)__webpack_require__.o(F,U)&&!__webpack_require__.o(Q,U)&&Object.defineProperty(Q,U,{enumerable:!0,get:F[U]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.j=563,(()=>{var Q={563:0};__webpack_require__.O.j=F=>0===Q[F];var F=(F,U)=>{var B,e,[s,n,x]=U,c=0;if(s.some((F=>0!==Q[F]))){for(B in n)__webpack_require__.o(n,B)&&(__webpack_require__.m[B]=n[B]);if(x)var l=x(__webpack_require__)}for(F&&F(U);c<s.length;c++)e=s[c],__webpack_require__.o(Q,e)&&Q[e]&&Q[e][0](),Q[e]=0;return __webpack_require__.O(l)},U=self.webpackChunkthreejs_lab=self.webpackChunkthreejs_lab||[];U.forEach(F.bind(null,0)),U.push=F.bind(null,U.push.bind(U))})();var __webpack_exports__=__webpack_require__.O(void 0,[121],(()=>__webpack_require__(673)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();