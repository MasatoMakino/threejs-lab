(()=>{"use strict";var __webpack_modules__={673:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// UNUSED EXPORTS: Study\n\n// EXTERNAL MODULE: ./node_modules/three/build/three.webgpu.js\nvar three_webgpu = __webpack_require__(6293);\n// EXTERNAL MODULE: ./node_modules/lil-gui/dist/lil-gui.esm.js\nvar lil_gui_esm = __webpack_require__(638);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(3580);\n;// CONCATENATED MODULE: ./src/CommonWebGPU.ts\n\n\nclass Common {\n    static initScene() {\n        const scene = new three_webgpu/* Scene */.Z58();\n        return scene;\n    }\n    static initLight(scene) {\n        const ambientLight = new three_webgpu/* AmbientLight */.$p8(0xffffff, 1.0);\n        scene.add(ambientLight);\n        return ambientLight;\n    }\n    static initCamera(scene, W, H, near = 1, far = 400) {\n        const camera = new three_webgpu/* PerspectiveCamera */.ubm(45, W / H, near, far);\n        camera.position.set(0, 0, 100);\n        camera.updateMatrixWorld(false);\n        scene.add(camera);\n        return camera;\n    }\n    static initControl(camera, render) {\n        let domElement;\n        if (render) {\n            domElement = render.domElement;\n        }\n        const control = new OrbitControls/* OrbitControls */.N(camera, domElement);\n        control.update();\n        return control;\n    }\n    static initWebGPURenderer(W, H, color = 0x000000, id = "webgl-canvas", antialias = true) {\n        const renderer = new three_webgpu/* WebGPURenderer */.uV1({\n            canvas: document.getElementById(id),\n            antialias: antialias,\n        });\n        this.initRendererSettings(renderer, color, W, H);\n        return renderer;\n    }\n    static initRendererSettings(renderer, color, W, H) {\n        renderer.setClearColor(new three_webgpu/* Color */.Q1f(color));\n        renderer.setSize(W, H);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        console.log("three.js revision: ", three_webgpu/* REVISION */.sPf);\n    }\n    static initHelper(scene) {\n        const axesHelper = new three_webgpu/* AxesHelper */.IzY(30);\n        scene.add(axesHelper);\n    }\n    static render(control, renderer, scene, camera, onBeforeRender) {\n        const rendering = () => {\n            if (onBeforeRender) {\n                onBeforeRender();\n            }\n            control.update();\n            renderer.renderAsync(scene, camera);\n            requestAnimationFrame(rendering);\n        };\n        rendering();\n    }\n    static addRendererInfo() {\n        const info = document.createElement("div");\n        document.body.appendChild(info);\n        return info;\n    }\n    static updateRendererInfo(div, info) {\n        div.innerText = JSON.stringify(info);\n    }\n}\n\n;// CONCATENATED MODULE: ./src/StudyColorSpace.ts\n\n\n\nclass Study {\n    constructor() {\n        this.initGUI = (materialBasic, materialHex, materialNode, multiColor, multiMaterial) => {\n            const gui = new lil_gui_esm/* GUI */.cL();\n            const materialColor = {\n                r: 0.5,\n                g: 0.5,\n                b: 0.5,\n            };\n            const materialAlpha = {\n                a: 1,\n            };\n            const onChangeColor = () => {\n                materialBasic.color.setRGB(materialColor.r, materialColor.g, materialColor.b);\n                const hex = ((materialColor.r * 255) << 16) |\n                    ((materialColor.g * 255) << 8) |\n                    (materialColor.b * 255);\n                materialHex.color.setHex(hex);\n                materialNode.color.setRGB(materialColor.r, materialColor.g, materialColor.b, "srgb");\n                multiColor.set(materialNode.color.r, materialNode.color.g, materialNode.color.b);\n            };\n            gui.add(materialColor, "r", 0, 1).onChange(onChangeColor);\n            gui.add(materialColor, "g", 0, 1).onChange(onChangeColor);\n            gui.add(materialColor, "b", 0, 1).onChange(onChangeColor);\n            const updateAlpha = () => {\n                materialBasic.opacity = materialAlpha.a;\n                materialHex.opacity = materialAlpha.a;\n                materialNode.opacity = materialAlpha.a;\n                multiMaterial.opacity = materialAlpha.a;\n            };\n            gui.add(materialAlpha, "a", 0, 1).onChange(updateAlpha);\n            onChangeColor();\n            updateAlpha();\n        };\n        const scene = Common.initScene();\n        Common.initLight(scene);\n        const camera = Common.initCamera(scene, Study.W, Study.H);\n        const renderer = Common.initWebGPURenderer(Study.W, Study.H);\n        const control = Common.initControl(camera, renderer);\n        Common.initHelper(scene);\n        this.initObject(scene);\n        Common.render(control, renderer, scene, camera);\n    }\n    initObject(scene) {\n        const geo = new three_webgpu/* PlaneGeometry */.bdM(10, 10);\n        const mat = new three_webgpu/* MeshBasicMaterial */.V9B();\n        mat.color.setRGB(1, 0, 0);\n        mat.transparent = true;\n        const mesh = new three_webgpu/* Mesh */.eaF(geo, mat);\n        scene.add(mesh);\n        const matHex = new three_webgpu/* MeshBasicMaterial */.V9B();\n        matHex.color.setHex(0xff0000);\n        matHex.transparent = true;\n        const meshHex = new three_webgpu/* Mesh */.eaF(geo, matHex);\n        scene.add(meshHex);\n        meshHex.position.set(20, 0, 0);\n        const matNode = new three_webgpu/* MeshBasicNodeMaterial */.P8l();\n        const meshNode = new three_webgpu/* Mesh */.eaF(geo, matNode);\n        matNode.color.setRGB(1, 0, 0);\n        matNode.transparent = true;\n        scene.add(meshNode);\n        meshNode.position.set(-20, 0, 0);\n        const matNodeMulti = new three_webgpu/* MeshBasicNodeMaterial */.P8l();\n        const multiColor = new three_webgpu/* Color */.Q1f(1, 0, 0);\n        const uniformColor = (0,three_webgpu/* uniform */.PiW)(multiColor);\n        matNodeMulti.colorNode = three_webgpu/* materialColor */.HMD.mul(uniformColor);\n        const meshNodeMulti = new three_webgpu/* Mesh */.eaF(geo, matNodeMulti);\n        matNodeMulti.transparent = true;\n        scene.add(meshNodeMulti);\n        meshNodeMulti.position.set(0, 20, 0);\n        this.initGUI(mat, matHex, matNode, multiColor, matNodeMulti);\n    }\n}\nStudy.W = 640;\nStudy.H = 480;\nwindow.onload = () => {\n    const study = new Study();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///673\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var F=__webpack_module_cache__[Q];if(void 0!==F)return F.exports;var U=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(U.exports,U,U.exports,__webpack_require__),U.loaded=!0,U.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,F,U,B)=>{if(!F){var e=1/0;for(l=0;l<deferred.length;l++){for(var[F,U,B]=deferred[l],s=!0,c=0;c<F.length;c++)(!1&B||e>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](F[c])))?F.splice(c--,1):(s=!1,B<e&&(e=B));if(s){deferred.splice(l--,1);var x=U();void 0!==x&&(Q=x)}}return Q}B=B||0;for(var l=deferred.length;l>0&&deferred[l-1][2]>B;l--)deferred[l]=deferred[l-1];deferred[l]=[F,U,B]},__webpack_require__.n=Q=>{var F=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(F,{a:F}),F},__webpack_require__.d=(Q,F)=>{for(var U in F)__webpack_require__.o(F,U)&&!__webpack_require__.o(Q,U)&&Object.defineProperty(Q,U,{enumerable:!0,get:F[U]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.j=563,(()=>{var Q={563:0};__webpack_require__.O.j=F=>0===Q[F];var F=(F,U)=>{var B,e,[s,c,x]=U,l=0;if(s.some((F=>0!==Q[F]))){for(B in c)__webpack_require__.o(c,B)&&(__webpack_require__.m[B]=c[B]);if(x)var n=x(__webpack_require__)}for(F&&F(U);l<s.length;l++)e=s[l],__webpack_require__.o(Q,e)&&Q[e]&&Q[e][0](),Q[e]=0;return __webpack_require__.O(n)},U=self.webpackChunkthreejs_lab=self.webpackChunkthreejs_lab||[];U.forEach(F.bind(null,0)),U.push=F.bind(null,U.push.bind(U))})();var __webpack_exports__=__webpack_require__.O(void 0,[121],(()=>__webpack_require__(673)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();