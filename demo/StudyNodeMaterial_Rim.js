(()=>{"use strict";var __webpack_modules__={3086:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// UNUSED EXPORTS: Study\n\n// EXTERNAL MODULE: ./node_modules/lil-gui/dist/lil-gui.esm.js\nvar lil_gui_esm = __webpack_require__(638);\n// EXTERNAL MODULE: ./node_modules/three/build/three.webgpu.js\nvar three_webgpu = __webpack_require__(6293);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(3580);\n;// CONCATENATED MODULE: ./src/CommonWebGPU.ts\n\n\nclass Common {\n    static initScene() {\n        const scene = new three_webgpu/* Scene */.Z58();\n        return scene;\n    }\n    static initLight(scene) {\n        const ambientLight = new three_webgpu/* AmbientLight */.$p8(0xffffff, 1.0);\n        scene.add(ambientLight);\n        return ambientLight;\n    }\n    static initCamera(scene, W, H, near = 1, far = 400) {\n        const camera = new three_webgpu/* PerspectiveCamera */.ubm(45, W / H, near, far);\n        camera.position.set(0, 0, 100);\n        camera.updateMatrixWorld(false);\n        scene.add(camera);\n        return camera;\n    }\n    static initControl(camera, render) {\n        let domElement;\n        if (render) {\n            domElement = render.domElement;\n        }\n        const control = new OrbitControls/* OrbitControls */.N(camera, domElement);\n        control.update();\n        return control;\n    }\n    static initWebGPURenderer(W, H, color = 0x000000, id = "webgl-canvas", antialias = true) {\n        const renderer = new three_webgpu/* WebGPURenderer */.uV1({\n            canvas: document.getElementById(id),\n            antialias: antialias,\n        });\n        this.initRendererSettings(renderer, color, W, H);\n        return renderer;\n    }\n    static initRendererSettings(renderer, color, W, H) {\n        renderer.setClearColor(new three_webgpu/* Color */.Q1f(color));\n        renderer.setSize(W, H);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        console.log("three.js revision: ", three_webgpu/* REVISION */.sPf);\n    }\n    static initHelper(scene) {\n        const axesHelper = new three_webgpu/* AxesHelper */.IzY(30);\n        scene.add(axesHelper);\n    }\n    static render(control, renderer, scene, camera, onBeforeRender) {\n        const rendering = () => {\n            if (onBeforeRender) {\n                onBeforeRender();\n            }\n            control.update();\n            renderer.renderAsync(scene, camera);\n            requestAnimationFrame(rendering);\n        };\n        rendering();\n    }\n    static addRendererInfo() {\n        const info = document.createElement("div");\n        document.body.appendChild(info);\n        return info;\n    }\n    static updateRendererInfo(div, info) {\n        div.innerText = JSON.stringify(info);\n    }\n}\n\n;// CONCATENATED MODULE: ./src/tsl/RimFunction.ts\n\nconst rimEffect = (0,three_webgpu.Fn)(([rimColor, rimPow, rimStrength, insideColor, insidePow, insideStrength]) => {\n    return rimAngleEffect(rimColor, rimPow, rimStrength, insideColor, insidePow, insideStrength, (0,three_webgpu/* vec3 */.eR5)(0.0, 0.0, 1.0));\n});\nconst rimAngleEffect = (0,three_webgpu.Fn)(([rimColor, rimPow, rimStrength, insideColor, insidePow, insideStrength, angle,]) => {\n    const addColor = (0,three_webgpu/* vec3 */.eR5)(0.0, 0.0, 0.0).toVar();\n    const rimAngle = (0,three_webgpu/* max */.T9B)(0.0, three_webgpu/* transformedNormalView */.ono.dot((0,three_webgpu/* vec3 */.eR5)(angle)));\n    const rimGlow = (0,three_webgpu/* sub */.jbE)(1.0, rimAngle);\n    rimGlow.assign((0,three_webgpu/* pow */.n7C)(rimGlow, rimPow));\n    addColor.rgb.addAssign(rimColor.mul(rimGlow.mul(rimStrength)));\n    const insideGlow = (0,three_webgpu/* pow */.n7C)(rimAngle, insidePow);\n    addColor.rgb.addAssign(insideColor.mul(insideGlow.mul(insideStrength)));\n    return addColor;\n});\n\n;// CONCATENATED MODULE: ./src/StudyNodeMaterial_Rim.ts\n\n\n\n\nclass Study {\n    constructor() {\n        this.initGUI = (color, rimColor, rimStrength, rimPow, rimInnerColor, rimInnerStrength, rimInnerPow) => {\n            const gui = new lil_gui_esm/* default */.Ay();\n            const options = {\n                color: color.getHex(),\n                rimColor: rimColor.value.getHex(),\n                rimStrength: rimStrength.value,\n                rimPow: rimPow.value,\n                rimInnerColor: rimInnerColor.value.getHex(),\n                rimInnerStrength: rimInnerStrength.value,\n                rimInnerPow: rimInnerPow.value,\n            };\n            gui.addColor(options, "color").onChange((v) => {\n                color.setHex(v);\n            });\n            const rimFolder = gui.addFolder("Rim");\n            rimFolder.addColor(options, "rimColor").onChange((v) => {\n                rimColor.value.setHex(v);\n            });\n            rimFolder.add(options, "rimStrength", 0, 1).onChange((v) => {\n                rimStrength.value = v;\n            });\n            rimFolder.add(options, "rimPow", 0, 5).onChange((v) => {\n                rimPow.value = v;\n            });\n            const rimInnerFolder = gui.addFolder("Rim Inner");\n            rimInnerFolder.addColor(options, "rimInnerColor").onChange((v) => {\n                rimInnerColor.value.setHex(v);\n            });\n            rimInnerFolder.add(options, "rimInnerStrength", 0, 1).onChange((v) => {\n                rimInnerStrength.value = v;\n            });\n            rimInnerFolder.add(options, "rimInnerPow", 0, 5).onChange((v) => {\n                rimInnerPow.value = v;\n            });\n        };\n        const scene = Common.initScene();\n        Common.initLight(scene);\n        const camera = Common.initCamera(scene, Study.W, Study.H);\n        const renderer = Common.initWebGPURenderer(Study.W, Study.H);\n        const control = Common.initControl(camera, renderer);\n        Common.initHelper(scene);\n        this.initObject(scene);\n        Common.render(control, renderer, scene, camera);\n    }\n    initObject(scene) {\n        const geo = new three_webgpu/* TorusGeometry */.O3Y(10, 4, 16, 100);\n        const mat = new three_webgpu/* MeshBasicNodeMaterial */.P8l();\n        mat.color.setHex(0x000000);\n        const generateRimEffectSetting = () => {\n            const rimColor = (0,three_webgpu/* uniform */.PiW)(new three_webgpu/* Color */.Q1f(0xff0000));\n            const rimStrength = (0,three_webgpu/* uniform */.PiW)(1);\n            const rimPow = (0,three_webgpu/* uniform */.PiW)(2.0);\n            const rimInnerColor = (0,three_webgpu/* uniform */.PiW)(new three_webgpu/* Color */.Q1f(0x0000ff));\n            const rimInnerStrength = (0,three_webgpu/* uniform */.PiW)(0.1);\n            const rimInnerPow = (0,three_webgpu/* uniform */.PiW)(1.0);\n            const angle = (0,three_webgpu/* uniform */.PiW)(new three_webgpu/* Vector3 */.Pq0(0, 0, 1));\n            return {\n                rimColor,\n                rimStrength,\n                rimPow,\n                rimInnerColor,\n                rimInnerStrength,\n                rimInnerPow,\n                angle,\n            };\n        };\n        const rim01 = generateRimEffectSetting();\n        mat.colorNode = three_webgpu/* materialColor */.HMD.add(rimEffect(rim01.rimColor, rim01.rimPow, rim01.rimStrength, rim01.rimInnerColor, rim01.rimInnerPow, rim01.rimInnerStrength));\n        const mesh = new three_webgpu/* Mesh */.eaF(geo, mat);\n        scene.add(mesh);\n        this.initGUI(mat.color, rim01.rimColor, rim01.rimStrength, rim01.rimPow, rim01.rimInnerColor, rim01.rimInnerStrength, rim01.rimInnerPow);\n    }\n}\nStudy.W = 640;\nStudy.H = 480;\nwindow.onload = () => {\n    const study = new Study();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3086\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(F.exports,F,F.exports,__webpack_require__),F.loaded=!0,F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,B)=>{if(!U){var e=1/0;for(g=0;g<deferred.length;g++){for(var[U,F,B]=deferred[g],n=!0,s=0;s<U.length;s++)(!1&B||e>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[s])))?U.splice(s--,1):(n=!1,B<e&&(e=B));if(n){deferred.splice(g--,1);var c=F();void 0!==c&&(Q=c)}}return Q}B=B||0;for(var g=deferred.length;g>0&&deferred[g-1][2]>B;g--)deferred[g]=deferred[g-1];deferred[g]=[U,F,B]},__webpack_require__.n=Q=>{var U=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(U,{a:U}),U},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.j=416,(()=>{var Q={416:0};__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var B,e,[n,s,c]=F,g=0;if(n.some((U=>0!==Q[U]))){for(B in s)__webpack_require__.o(s,B)&&(__webpack_require__.m[B]=s[B]);if(c)var b=c(__webpack_require__)}for(U&&U(F);g<n.length;g++)e=n[g],__webpack_require__.o(Q,e)&&Q[e]&&Q[e][0](),Q[e]=0;return __webpack_require__.O(b)},F=self.webpackChunkthreejs_lab=self.webpackChunkthreejs_lab||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[121],(()=>__webpack_require__(3086)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();