(()=>{"use strict";var __webpack_modules__={249:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// UNUSED EXPORTS: Study\n\n// EXTERNAL MODULE: ./node_modules/lil-gui/dist/lil-gui.esm.js\nvar lil_gui_esm = __webpack_require__(638);\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(6753);\n// EXTERNAL MODULE: ./node_modules/three-nebula/build/esm/index.js + 97 modules\nvar esm = __webpack_require__(4753);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(3580);\n;// CONCATENATED MODULE: ./src/Common.ts\n\n\nvar Common = /** @class */ (function () {\n    function Common() {\n    }\n    Common.initScene = function () {\n        var scene = new three_module.Scene();\n        return scene;\n    };\n    Common.initLight = function (scene) {\n        var ambientLight = new three_module.AmbientLight(0xffffff, 1.0);\n        scene.add(ambientLight);\n        return ambientLight;\n    };\n    Common.initCamera = function (scene, W, H, near, far) {\n        if (near === void 0) { near = 1; }\n        if (far === void 0) { far = 400; }\n        var camera = new three_module.PerspectiveCamera(45, W / H, near, far);\n        camera.position.set(0, 0, 100);\n        camera.updateMatrixWorld(false);\n        scene.add(camera);\n        return camera;\n    };\n    Common.initControl = function (camera, render) {\n        var domElement;\n        if (render) {\n            domElement = render.domElement;\n        }\n        var control = new OrbitControls/* OrbitControls */.N(camera, domElement);\n        control.update();\n        return control;\n    };\n    Common.initRenderer = function (W, H, color, id, antialias) {\n        if (color === void 0) { color = 0x000000; }\n        if (id === void 0) { id = "webgl-canvas"; }\n        if (antialias === void 0) { antialias = true; }\n        var renderer = new three_module.WebGLRenderer({\n            canvas: document.getElementById(id),\n            antialias: antialias,\n        });\n        this.initRendererSettings(renderer, color, W, H);\n        return renderer;\n    };\n    Common.initRendererSettings = function (renderer, color, W, H) {\n        renderer.setClearColor(new three_module.Color(color));\n        renderer.setSize(W, H);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        console.log("three.js revision: ", three_module.REVISION);\n    };\n    Common.initHelper = function (scene) {\n        var axesHelper = new three_module.AxesHelper(30);\n        scene.add(axesHelper);\n    };\n    Common.render = function (control, renderer, scene, camera, onBeforeRender) {\n        var rendering = function () {\n            if (onBeforeRender) {\n                onBeforeRender();\n            }\n            control.update();\n            renderer.render(scene, camera);\n            requestAnimationFrame(rendering);\n        };\n        rendering();\n    };\n    Common.addRendererInfo = function () {\n        var info = document.createElement("div");\n        document.body.appendChild(info);\n        return info;\n    };\n    Common.updateRendererInfo = function (div, info) {\n        div.innerText = JSON.stringify(info);\n    };\n    return Common;\n}());\n\n\n;// CONCATENATED MODULE: ./src/NebulaGUI.ts\nvar NebulaGUI = /** @class */ (function () {\n    function NebulaGUI() {\n    }\n    /**\n     * emitterの座標制御\n     * @param gui\n     */\n    NebulaGUI.initEmitterPosition = function (gui, emitters) {\n        var prop = {\n            x: emitters[0].position.x,\n            y: emitters[0].position.y,\n            z: emitters[0].position.z,\n        };\n        var changed = function (val) {\n            emitters.forEach(function (emt) {\n                emt.position.x = prop.x;\n                emt.position.y = prop.y;\n                emt.position.z = prop.z;\n            });\n        };\n        var folder = gui.addFolder("Position");\n        folder.add(prop, "x", -30.0, 30.0).onChange(changed);\n        folder.add(prop, "y", -30.0, 30.0).onChange(changed);\n        folder.add(prop, "z", -30.0, 30.0).onChange(changed);\n        folder.open();\n    };\n    /**\n     * パーティクル生成間隔の制御パネル\n     * @param gui\n     */\n    NebulaGUI.initEmitterRate = function (gui, emitters) {\n        //spanクラスはmin, maxの２つの値をセットにした範囲を指定する型\n        var prop = {\n            numPanA: emitters[0].rate.numPan.a,\n            numPanB: emitters[0].rate.numPan.b,\n            timePan: emitters[0].rate.timePan.a,\n        };\n        var changed = function (val) {\n            emitters.forEach(function (emt) {\n                emt.rate.numPan.a = prop.numPanA;\n                emt.rate.numPan.b = prop.numPanB;\n                emt.rate.timePan.a = prop.timePan;\n            });\n        };\n        /**\n         * 1回で射出されるパーティクルの数, min, max\n         */\n        var folder = gui.addFolder("Rate");\n        folder.add(prop, "numPanA", 0.0, 30.0).step(1).onChange(changed);\n        folder.add(prop, "numPanB", 0.0, 30.0).step(1).onChange(changed);\n        folder.add(prop, "timePan", 0.01, 0.5).step(0.01).onChange(changed);\n        folder.open();\n    };\n    /**\n     * 射出した粒子の到達点および射出角度を制御するパネル\n     * @param gui\n     */\n    NebulaGUI.initRange = function (gui, ranges) {\n        var prop = {\n            radiusMin: ranges[0].radiusPan.a,\n            radiusMax: ranges[0].radiusPan.b,\n            tha: ranges[0].tha,\n        };\n        var changed = function (val) {\n            ranges.forEach(function (range) {\n                range.radiusPan.a = prop.radiusMin;\n                range.radiusPan.b = prop.radiusMax;\n                range.tha = prop.tha;\n            });\n        };\n        var folder = gui.addFolder("RadialVelocity");\n        folder.add(prop, "radiusMin", 0.0, 45.0).step(0.1).onChange(changed);\n        folder.add(prop, "radiusMax", 0.0, 45.0).step(0.1).onChange(changed);\n        folder.add(prop, "tha", 0.0, Math.PI).step(0.1).onChange(changed);\n        folder.open();\n    };\n    /**\n     * Spriteのサイズを制御するパネル\n     * @param gui\n     */\n    NebulaGUI.initRadius = function (gui, radiusInitializers) {\n        var prop = {\n            min: radiusInitializers[0].radius.a,\n            max: radiusInitializers[0].radius.b,\n        };\n        var changed = function (val) {\n            radiusInitializers.forEach(function (rad) {\n                rad.radius.a = prop.min;\n                rad.radius.b = prop.max;\n            });\n        };\n        var folder = gui.addFolder("Initial Sprite Size");\n        folder.add(prop, "min", 0.0, 45.0).step(0.1).onChange(changed);\n        folder.add(prop, "max", 0.0, 45.0).step(0.1).onChange(changed);\n        folder.open();\n    };\n    /**\n     * Spriteの寿命を制御するパネル\n     * @param gui\n     */\n    NebulaGUI.initLife = function (gui, lifeInitializers) {\n        //spanクラスはmin, maxの２つの値をセットにした範囲を指定する型\n        var span = lifeInitializers[0].lifePan;\n        var prop = {\n            min: span.a,\n            max: span.b,\n        };\n        var changed = function (val) {\n            lifeInitializers.forEach(function (life) {\n                life.lifePan.a = prop.min;\n                life.lifePan.b = prop.max;\n            });\n        };\n        var folder = gui.addFolder("Life");\n        folder.add(prop, "min", 0.0, 12.0).step(0.1).onChange(changed);\n        folder.add(prop, "max", 0.0, 24.0).step(0.1).onChange(changed);\n        folder.open();\n    };\n    NebulaGUI.initAlpha = function (gui, alphaBehaviours) {\n        var prop = {\n            start: alphaBehaviours[0].alphaA.a,\n            end: alphaBehaviours[0].alphaB.a,\n        };\n        var changed = function (val) {\n            alphaBehaviours.forEach(function (alpha) {\n                alpha.alphaA.a = prop.start;\n                alpha.alphaA.b = prop.start;\n                alpha.alphaB.a = prop.end;\n                alpha.alphaB.b = prop.end;\n            });\n        };\n        var folder = gui.addFolder("Alpha");\n        folder.add(prop, "start", 0.0, 1.0).step(0.1).onChange(changed);\n        folder.add(prop, "end", 0.0, 1.0).step(0.1).onChange(changed);\n        folder.open();\n    };\n    NebulaGUI.initScale = function (gui, scaleBehaviours) {\n        var prop = {\n            start: scaleBehaviours[0].scaleA.a,\n            end: scaleBehaviours[0].scaleB.a,\n        };\n        var changed = function (val) {\n            scaleBehaviours.forEach(function (scale) {\n                scale.scaleA.a = prop.start;\n                scale.scaleA.b = prop.start;\n                scale.scaleB.a = prop.end;\n                scale.scaleB.b = prop.end;\n            });\n        };\n        var folder = gui.addFolder("Scale");\n        folder.add(prop, "start", 0.0, 3.0).step(0.1).onChange(changed);\n        folder.add(prop, "end", 0.0, 3.0).step(0.1).onChange(changed);\n        folder.open();\n    };\n    NebulaGUI.initColor = function (gui, colors) {\n        var prop = {\n            start: colors[0].colorA.colors[0].getHex(),\n            end: colors[0].colorB.colors[0].getHex(),\n        };\n        var changed = function () {\n            colors.forEach(function (color) {\n                color.colorA.colors[0].setHex(prop.start);\n                color.colorB.colors[0].setHex(prop.end);\n            });\n        };\n        var folder = gui.addFolder("Color");\n        folder.addColor(prop, "start").onChange(changed);\n        folder.addColor(prop, "end").onChange(changed);\n        folder.open();\n    };\n    return NebulaGUI;\n}());\n\n\n;// CONCATENATED MODULE: ./src/StudyNebula.ts\n\n\n\n\n\n\nvar Study = /** @class */ (function () {\n    function Study() {\n        var _this = this;\n        var scene = Common.initScene();\n        Common.initLight(scene);\n        var camera = Common.initCamera(scene, Study.W, Study.H);\n        var renderer = Common.initRenderer(Study.W, Study.H);\n        var control = Common.initControl(camera, renderer);\n        Common.initHelper(scene);\n        this.initObject(scene);\n        Common.render(control, renderer, scene, camera, function () {\n            if (_this.system) {\n                _this.system.update();\n            }\n        });\n        this.initGUI();\n    }\n    Study.prototype.initObject = function (scene) {\n        this.system = new esm/* default */.Ay();\n        this.emitter = new esm/* Emitter */.vl();\n        var renderer = new esm/* SpriteRenderer */.jS(scene, three_module);\n        this.range = new esm/* RadialVelocity */.Xj(45, new esm/* Vector3D */.Dl(0, 1, 0), 180);\n        this.radius = new esm/* Radius */.TI(6, 12);\n        this.life = new esm/* Life */.RB(6);\n        this.alpha = new esm/* Alpha */.ry(1, 0);\n        this.scale = new esm/* Scale */.FE(0.1, 1.0);\n        this.color = new esm/* Color */.Q1(new three_module.Color(0x00ff00), new three_module.Color(0x00ff00));\n        this.emitter\n            .setRate(new esm/* Rate */.tt(new esm/* Span */.L9(4, 16), 0.1))\n            .setInitializers([\n            new esm/* Position */.yX(new esm/* PointZone */.hp(0, 0)),\n            new esm/* Mass */.ZW(1),\n            this.radius,\n            this.life,\n            this.range,\n        ])\n            .setBehaviours([this.alpha, this.scale, this.color])\n            .emit();\n        this.system.addEmitter(this.emitter).addRenderer(renderer);\n    };\n    Study.prototype.initGUI = function () {\n        var gui = new lil_gui_esm/* GUI */.cL();\n        var folder = gui.addFolder("Emitter");\n        folder.open();\n        NebulaGUI.initEmitterPosition(folder, [this.emitter]);\n        NebulaGUI.initEmitterRate(folder, [this.emitter]);\n        NebulaGUI.initRange(folder, [this.range]);\n        NebulaGUI.initRadius(folder, [this.radius]);\n        NebulaGUI.initLife(folder, [this.life]);\n        var folderBehaviour = gui.addFolder("Behaviour");\n        NebulaGUI.initAlpha(folderBehaviour, [this.alpha]);\n        NebulaGUI.initScale(folderBehaviour, [this.scale]);\n        NebulaGUI.initColor(folderBehaviour, [this.color]);\n        folderBehaviour.open();\n    };\n    Study.W = 640;\n    Study.H = 480;\n    return Study;\n}());\n\nwindow.onload = function () {\n    var study = new Study();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LENBQUMsV0FBVyxDQUFDLENBQUM7UUFDbkQsU0FBUyxDQUFDLFNBQVMsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNuRCxTQUFTLENBQUMsU0FBUyxDQUFDLGVBQWUsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ25ELFNBQVMsQ0FBQyxTQUFTLENBQUMsZUFBZSxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDbkQsZUFBZSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUF6RXNCLE9BQUMsR0FBRyxHQUFHLENBQUM7SUFDUixPQUFDLEdBQUcsR0FBRyxDQUFDO0lBeUVqQyxZQUFDO0NBQUE7QUEzRWlCO0FBNkVsQixNQUFNLENBQUMsTUFBTSxHQUFHO0lBQ2QsSUFBTSxLQUFLLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztBQUM1QixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aHJlZWpzLWxhYi8uL3NyYy9Db21tb24udHM/NzMzMCIsIndlYnBhY2s6Ly90aHJlZWpzLWxhYi8uL3NyYy9OZWJ1bGFHVUkudHM/ZTc4MyIsIndlYnBhY2s6Ly90aHJlZWpzLWxhYi8uL3NyYy9TdHVkeU5lYnVsYS50cz9jM2FiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFtYmllbnRMaWdodCxcbiAgQXhlc0hlbHBlcixcbiAgQ2FtZXJhLFxuICBDb2xvcixcbiAgUGVyc3BlY3RpdmVDYW1lcmEsXG4gIFNjZW5lLFxuICBXZWJHTFJlbmRlcmVyLFxuICBSRVZJU0lPTixcbn0gZnJvbSBcInRocmVlXCI7XG5pbXBvcnQgeyBPcmJpdENvbnRyb2xzIH0gZnJvbSBcInRocmVlL2V4YW1wbGVzL2pzbS9jb250cm9scy9PcmJpdENvbnRyb2xzLmpzXCI7XG5cbmV4cG9ydCBjbGFzcyBDb21tb24ge1xuICBwdWJsaWMgc3RhdGljIGluaXRTY2VuZSgpIHtcbiAgICBjb25zdCBzY2VuZSA9IG5ldyBTY2VuZSgpO1xuICAgIHJldHVybiBzY2VuZTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgaW5pdExpZ2h0KHNjZW5lKSB7XG4gICAgY29uc3QgYW1iaWVudExpZ2h0ID0gbmV3IEFtYmllbnRMaWdodCgweGZmZmZmZiwgMS4wKTtcbiAgICBzY2VuZS5hZGQoYW1iaWVudExpZ2h0KTtcbiAgICByZXR1cm4gYW1iaWVudExpZ2h0O1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBpbml0Q2FtZXJhKFxuICAgIHNjZW5lOiBTY2VuZSxcbiAgICBXOiBudW1iZXIsXG4gICAgSDogbnVtYmVyLFxuICAgIG5lYXIgPSAxLFxuICAgIGZhciA9IDQwMFxuICApOiBQZXJzcGVjdGl2ZUNhbWVyYSB7XG4gICAgY29uc3QgY2FtZXJhID0gbmV3IFBlcnNwZWN0aXZlQ2FtZXJhKDQ1LCBXIC8gSCwgbmVhciwgZmFyKTtcbiAgICBjYW1lcmEucG9zaXRpb24uc2V0KDAsIDAsIDEwMCk7XG4gICAgY2FtZXJhLnVwZGF0ZU1hdHJpeFdvcmxkKGZhbHNlKTtcbiAgICBzY2VuZS5hZGQoY2FtZXJhKTtcbiAgICByZXR1cm4gY2FtZXJhO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBpbml0Q29udHJvbChcbiAgICBjYW1lcmE6IENhbWVyYSxcbiAgICByZW5kZXI6IFdlYkdMUmVuZGVyZXJcbiAgKTogT3JiaXRDb250cm9scyB7XG4gICAgbGV0IGRvbUVsZW1lbnQ7XG4gICAgaWYgKHJlbmRlcikge1xuICAgICAgZG9tRWxlbWVudCA9IHJlbmRlci5kb21FbGVtZW50O1xuICAgIH1cbiAgICBjb25zdCBjb250cm9sID0gbmV3IE9yYml0Q29udHJvbHMoY2FtZXJhLCBkb21FbGVtZW50KTtcbiAgICBjb250cm9sLnVwZGF0ZSgpO1xuICAgIHJldHVybiBjb250cm9sO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBpbml0UmVuZGVyZXIoXG4gICAgVzogbnVtYmVyLFxuICAgIEg6IG51bWJlcixcbiAgICBjb2xvcjogbnVtYmVyID0gMHgwMDAwMDAsXG4gICAgaWQ6IHN0cmluZyA9IFwid2ViZ2wtY2FudmFzXCIsXG4gICAgYW50aWFsaWFzOiBib29sZWFuID0gdHJ1ZVxuICApIHtcbiAgICBjb25zdCByZW5kZXJlciA9IG5ldyBXZWJHTFJlbmRlcmVyKHtcbiAgICAgIGNhbnZhczogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpIGFzIEhUTUxDYW52YXNFbGVtZW50LFxuICAgICAgYW50aWFsaWFzOiBhbnRpYWxpYXMsXG4gICAgfSk7XG4gICAgdGhpcy5pbml0UmVuZGVyZXJTZXR0aW5ncyhyZW5kZXJlciwgY29sb3IsIFcsIEgpO1xuICAgIHJldHVybiByZW5kZXJlcjtcbiAgfVxuXG4gIHByaXZhdGUgc3RhdGljIGluaXRSZW5kZXJlclNldHRpbmdzKFxuICAgIHJlbmRlcmVyOiBXZWJHTFJlbmRlcmVyLFxuICAgIGNvbG9yOiBudW1iZXIsXG4gICAgVzogbnVtYmVyLFxuICAgIEg6IG51bWJlclxuICApIHtcbiAgICByZW5kZXJlci5zZXRDbGVhckNvbG9yKG5ldyBDb2xvcihjb2xvcikpO1xuICAgIHJlbmRlcmVyLnNldFNpemUoVywgSCk7XG4gICAgcmVuZGVyZXIuc2V0UGl4ZWxSYXRpbyh3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyk7XG4gICAgY29uc29sZS5sb2coXCJ0aHJlZS5qcyByZXZpc2lvbjogXCIsIFJFVklTSU9OKTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgaW5pdEhlbHBlcihzY2VuZTogU2NlbmUpOiB2b2lkIHtcbiAgICBjb25zdCBheGVzSGVscGVyID0gbmV3IEF4ZXNIZWxwZXIoMzApO1xuICAgIHNjZW5lLmFkZChheGVzSGVscGVyKTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgcmVuZGVyKFxuICAgIGNvbnRyb2w6IE9yYml0Q29udHJvbHMsXG4gICAgcmVuZGVyZXI6IFdlYkdMUmVuZGVyZXIsXG4gICAgc2NlbmU6IFNjZW5lLFxuICAgIGNhbWVyYTogQ2FtZXJhLFxuICAgIG9uQmVmb3JlUmVuZGVyPzogKCkgPT4gdm9pZFxuICApIHtcbiAgICBjb25zdCByZW5kZXJpbmcgPSAoKSA9PiB7XG4gICAgICBpZiAob25CZWZvcmVSZW5kZXIpIHtcbiAgICAgICAgb25CZWZvcmVSZW5kZXIoKTtcbiAgICAgIH1cbiAgICAgIGNvbnRyb2wudXBkYXRlKCk7XG4gICAgICByZW5kZXJlci5yZW5kZXIoc2NlbmUsIGNhbWVyYSk7XG4gICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUocmVuZGVyaW5nKTtcbiAgICB9O1xuICAgIHJlbmRlcmluZygpO1xuICB9XG5cbiAgcHVibGljIHN0YXRpYyBhZGRSZW5kZXJlckluZm8oKTogSFRNTERpdkVsZW1lbnQge1xuICAgIGNvbnN0IGluZm8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaW5mbyk7XG4gICAgcmV0dXJuIGluZm87XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIHVwZGF0ZVJlbmRlcmVySW5mbyhkaXY6IEhUTUxEaXZFbGVtZW50LCBpbmZvOiBhbnkpOiB2b2lkIHtcbiAgICBkaXYuaW5uZXJUZXh0ID0gSlNPTi5zdHJpbmdpZnkoaW5mbyk7XG4gIH1cbn1cbiIsImltcG9ydCB7XG4gIEFscGhhLFxuICBDb2xvciBhcyBOZWJ1bGFDb2xvcixcbiAgRW1pdHRlcixcbiAgTGlmZSxcbiAgUmFkaWFsVmVsb2NpdHksXG4gIFJhZGl1cyxcbiAgU2NhbGUsXG4gIFNwYW4sXG59IGZyb20gXCJ0aHJlZS1uZWJ1bGFcIjtcblxuZXhwb3J0IGNsYXNzIE5lYnVsYUdVSSB7XG4gIC8qKlxuICAgKiBlbWl0dGVy44Gu5bqn5qiZ5Yi25b6hXG4gICAqIEBwYXJhbSBndWlcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgaW5pdEVtaXR0ZXJQb3NpdGlvbihndWksIGVtaXR0ZXJzOiBFbWl0dGVyW10pOiB2b2lkIHtcbiAgICBjb25zdCBwcm9wID0ge1xuICAgICAgeDogZW1pdHRlcnNbMF0ucG9zaXRpb24ueCxcbiAgICAgIHk6IGVtaXR0ZXJzWzBdLnBvc2l0aW9uLnksXG4gICAgICB6OiBlbWl0dGVyc1swXS5wb3NpdGlvbi56LFxuICAgIH07XG4gICAgY29uc3QgY2hhbmdlZCA9ICh2YWwpID0+IHtcbiAgICAgIGVtaXR0ZXJzLmZvckVhY2goKGVtdCkgPT4ge1xuICAgICAgICBlbXQucG9zaXRpb24ueCA9IHByb3AueDtcbiAgICAgICAgZW10LnBvc2l0aW9uLnkgPSBwcm9wLnk7XG4gICAgICAgIGVtdC5wb3NpdGlvbi56ID0gcHJvcC56O1xuICAgICAgfSk7XG4gICAgfTtcblxuICAgIGNvbnN0IGZvbGRlciA9IGd1aS5hZGRGb2xkZXIoXCJQb3NpdGlvblwiKTtcbiAgICBmb2xkZXIuYWRkKHByb3AsIFwieFwiLCAtMzAuMCwgMzAuMCkub25DaGFuZ2UoY2hhbmdlZCk7XG4gICAgZm9sZGVyLmFkZChwcm9wLCBcInlcIiwgLTMwLjAsIDMwLjApLm9uQ2hhbmdlKGNoYW5nZWQpO1xuICAgIGZvbGRlci5hZGQocHJvcCwgXCJ6XCIsIC0zMC4wLCAzMC4wKS5vbkNoYW5nZShjaGFuZ2VkKTtcbiAgICBmb2xkZXIub3BlbigpO1xuICB9XG5cbiAgLyoqXG4gICAqIOODkeODvOODhuOCo+OCr+ODq+eUn+aIkOmWk+malOOBruWItuW+oeODkeODjeODq1xuICAgKiBAcGFyYW0gZ3VpXG4gICAqL1xuICBwdWJsaWMgc3RhdGljIGluaXRFbWl0dGVyUmF0ZShndWksIGVtaXR0ZXJzOiBFbWl0dGVyW10pOiB2b2lkIHtcbiAgICAvL3NwYW7jgq/jg6njgrnjga9taW4sIG1heOOBru+8kuOBpOOBruWApOOCkuOCu+ODg+ODiOOBq+OBl+OBn+evhOWbsuOCkuaMh+WumuOBmeOCi+Wei1xuICAgIGNvbnN0IHByb3AgPSB7XG4gICAgICBudW1QYW5BOiBlbWl0dGVyc1swXS5yYXRlLm51bVBhbi5hLFxuICAgICAgbnVtUGFuQjogZW1pdHRlcnNbMF0ucmF0ZS5udW1QYW4uYixcbiAgICAgIHRpbWVQYW46IGVtaXR0ZXJzWzBdLnJhdGUudGltZVBhbi5hLFxuICAgIH07XG4gICAgY29uc3QgY2hhbmdlZCA9ICh2YWwpID0+IHtcbiAgICAgIGVtaXR0ZXJzLmZvckVhY2goKGVtdCkgPT4ge1xuICAgICAgICBlbXQucmF0ZS5udW1QYW4uYSA9IHByb3AubnVtUGFuQTtcbiAgICAgICAgZW10LnJhdGUubnVtUGFuLmIgPSBwcm9wLm51bVBhbkI7XG4gICAgICAgIGVtdC5yYXRlLnRpbWVQYW4uYSA9IHByb3AudGltZVBhbjtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiAx5Zue44Gn5bCE5Ye644GV44KM44KL44OR44O844OG44Kj44Kv44Or44Gu5pWwLCBtaW4sIG1heFxuICAgICAqL1xuICAgIGNvbnN0IGZvbGRlciA9IGd1aS5hZGRGb2xkZXIoXCJSYXRlXCIpO1xuICAgIGZvbGRlci5hZGQocHJvcCwgXCJudW1QYW5BXCIsIDAuMCwgMzAuMCkuc3RlcCgxKS5vbkNoYW5nZShjaGFuZ2VkKTtcbiAgICBmb2xkZXIuYWRkKHByb3AsIFwibnVtUGFuQlwiLCAwLjAsIDMwLjApLnN0ZXAoMSkub25DaGFuZ2UoY2hhbmdlZCk7XG4gICAgZm9sZGVyLmFkZChwcm9wLCBcInRpbWVQYW5cIiwgMC4wMSwgMC41KS5zdGVwKDAuMDEpLm9uQ2hhbmdlKGNoYW5nZWQpO1xuICAgIGZvbGRlci5vcGVuKCk7XG4gIH1cblxuICAvKipcbiAgICog5bCE5Ye644GX44Gf57KS5a2Q44Gu5Yiw6YGU54K544GK44KI44Gz5bCE5Ye66KeS5bqm44KS5Yi25b6h44GZ44KL44OR44ON44OrXG4gICAqIEBwYXJhbSBndWlcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgaW5pdFJhbmdlKGd1aSwgcmFuZ2VzOiBSYWRpYWxWZWxvY2l0eVtdKTogdm9pZCB7XG4gICAgY29uc3QgcHJvcCA9IHtcbiAgICAgIHJhZGl1c01pbjogcmFuZ2VzWzBdLnJhZGl1c1Bhbi5hLFxuICAgICAgcmFkaXVzTWF4OiByYW5nZXNbMF0ucmFkaXVzUGFuLmIsXG4gICAgICB0aGE6IHJhbmdlc1swXS50aGEsXG4gICAgfTtcblxuICAgIGNvbnN0IGNoYW5nZWQgPSAodmFsKSA9PiB7XG4gICAgICByYW5nZXMuZm9yRWFjaCgocmFuZ2UpID0+IHtcbiAgICAgICAgcmFuZ2UucmFkaXVzUGFuLmEgPSBwcm9wLnJhZGl1c01pbjtcbiAgICAgICAgcmFuZ2UucmFkaXVzUGFuLmIgPSBwcm9wLnJhZGl1c01heDtcbiAgICAgICAgcmFuZ2UudGhhID0gcHJvcC50aGE7XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgY29uc3QgZm9sZGVyID0gZ3VpLmFkZEZvbGRlcihcIlJhZGlhbFZlbG9jaXR5XCIpO1xuICAgIGZvbGRlci5hZGQocHJvcCwgXCJyYWRpdXNNaW5cIiwgMC4wLCA0NS4wKS5zdGVwKDAuMSkub25DaGFuZ2UoY2hhbmdlZCk7XG4gICAgZm9sZGVyLmFkZChwcm9wLCBcInJhZGl1c01heFwiLCAwLjAsIDQ1LjApLnN0ZXAoMC4xKS5vbkNoYW5nZShjaGFuZ2VkKTtcbiAgICBmb2xkZXIuYWRkKHByb3AsIFwidGhhXCIsIDAuMCwgTWF0aC5QSSkuc3RlcCgwLjEpLm9uQ2hhbmdlKGNoYW5nZWQpO1xuICAgIGZvbGRlci5vcGVuKCk7XG4gIH1cblxuICAvKipcbiAgICogU3ByaXRl44Gu44K144Kk44K644KS5Yi25b6h44GZ44KL44OR44ON44OrXG4gICAqIEBwYXJhbSBndWlcbiAgICovXG4gIHB1YmxpYyBzdGF0aWMgaW5pdFJhZGl1cyhndWksIHJhZGl1c0luaXRpYWxpemVyczogUmFkaXVzW10pOiB2b2lkIHtcbiAgICBjb25zdCBwcm9wID0ge1xuICAgICAgbWluOiByYWRpdXNJbml0aWFsaXplcnNbMF0ucmFkaXVzLmEsXG4gICAgICBtYXg6IHJhZGl1c0luaXRpYWxpemVyc1swXS5yYWRpdXMuYixcbiAgICB9O1xuXG4gICAgY29uc3QgY2hhbmdlZCA9ICh2YWwpID0+IHtcbiAgICAgIHJhZGl1c0luaXRpYWxpemVycy5mb3JFYWNoKChyYWQpID0+IHtcbiAgICAgICAgcmFkLnJhZGl1cy5hID0gcHJvcC5taW47XG4gICAgICAgIHJhZC5yYWRpdXMuYiA9IHByb3AubWF4O1xuICAgICAgfSk7XG4gICAgfTtcblxuICAgIGNvbnN0IGZvbGRlciA9IGd1aS5hZGRGb2xkZXIoXCJJbml0aWFsIFNwcml0ZSBTaXplXCIpO1xuICAgIGZvbGRlci5hZGQocHJvcCwgXCJtaW5cIiwgMC4wLCA0NS4wKS5zdGVwKDAuMSkub25DaGFuZ2UoY2hhbmdlZCk7XG4gICAgZm9sZGVyLmFkZChwcm9wLCBcIm1heFwiLCAwLjAsIDQ1LjApLnN0ZXAoMC4xKS5vbkNoYW5nZShjaGFuZ2VkKTtcbiAgICBmb2xkZXIub3BlbigpO1xuICB9XG5cbiAgLyoqXG4gICAqIFNwcml0ZeOBruWvv+WRveOCkuWItuW+oeOBmeOCi+ODkeODjeODq1xuICAgKiBAcGFyYW0gZ3VpXG4gICAqL1xuICBwdWJsaWMgc3RhdGljIGluaXRMaWZlKGd1aSwgbGlmZUluaXRpYWxpemVyczogTGlmZVtdKTogdm9pZCB7XG4gICAgLy9zcGFu44Kv44Op44K544GvbWluLCBtYXjjga7vvJLjgaTjga7lgKTjgpLjgrvjg4Pjg4jjgavjgZfjgZ/nr4Tlm7LjgpLmjIflrprjgZnjgovlnotcbiAgICBjb25zdCBzcGFuOiBTcGFuID0gbGlmZUluaXRpYWxpemVyc1swXS5saWZlUGFuO1xuICAgIGNvbnN0IHByb3AgPSB7XG4gICAgICBtaW46IHNwYW4uYSxcbiAgICAgIG1heDogc3Bhbi5iLFxuICAgIH07XG5cbiAgICBjb25zdCBjaGFuZ2VkID0gKHZhbCkgPT4ge1xuICAgICAgbGlmZUluaXRpYWxpemVycy5mb3JFYWNoKChsaWZlKSA9PiB7XG4gICAgICAgIGxpZmUubGlmZVBhbi5hID0gcHJvcC5taW47XG4gICAgICAgIGxpZmUubGlmZVBhbi5iID0gcHJvcC5tYXg7XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgY29uc3QgZm9sZGVyID0gZ3VpLmFkZEZvbGRlcihcIkxpZmVcIik7XG4gICAgZm9sZGVyLmFkZChwcm9wLCBcIm1pblwiLCAwLjAsIDEyLjApLnN0ZXAoMC4xKS5vbkNoYW5nZShjaGFuZ2VkKTtcbiAgICBmb2xkZXIuYWRkKHByb3AsIFwibWF4XCIsIDAuMCwgMjQuMCkuc3RlcCgwLjEpLm9uQ2hhbmdlKGNoYW5nZWQpO1xuICAgIGZvbGRlci5vcGVuKCk7XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGluaXRBbHBoYShndWksIGFscGhhQmVoYXZpb3VyczogQWxwaGFbXSk6IHZvaWQge1xuICAgIGNvbnN0IHByb3AgPSB7XG4gICAgICBzdGFydDogYWxwaGFCZWhhdmlvdXJzWzBdLmFscGhhQS5hLFxuICAgICAgZW5kOiBhbHBoYUJlaGF2aW91cnNbMF0uYWxwaGFCLmEsXG4gICAgfTtcbiAgICBjb25zdCBjaGFuZ2VkID0gKHZhbCkgPT4ge1xuICAgICAgYWxwaGFCZWhhdmlvdXJzLmZvckVhY2goKGFscGhhKSA9PiB7XG4gICAgICAgIGFscGhhLmFscGhhQS5hID0gcHJvcC5zdGFydDtcbiAgICAgICAgYWxwaGEuYWxwaGFBLmIgPSBwcm9wLnN0YXJ0O1xuICAgICAgICBhbHBoYS5hbHBoYUIuYSA9IHByb3AuZW5kO1xuICAgICAgICBhbHBoYS5hbHBoYUIuYiA9IHByb3AuZW5kO1xuICAgICAgfSk7XG4gICAgfTtcblxuICAgIGNvbnN0IGZvbGRlciA9IGd1aS5hZGRGb2xkZXIoXCJBbHBoYVwiKTtcbiAgICBmb2xkZXIuYWRkKHByb3AsIFwic3RhcnRcIiwgMC4wLCAxLjApLnN0ZXAoMC4xKS5vbkNoYW5nZShjaGFuZ2VkKTtcbiAgICBmb2xkZXIuYWRkKHByb3AsIFwiZW5kXCIsIDAuMCwgMS4wKS5zdGVwKDAuMSkub25DaGFuZ2UoY2hhbmdlZCk7XG4gICAgZm9sZGVyLm9wZW4oKTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgaW5pdFNjYWxlKGd1aSwgc2NhbGVCZWhhdmlvdXJzOiBTY2FsZVtdKTogdm9pZCB7XG4gICAgY29uc3QgcHJvcCA9IHtcbiAgICAgIHN0YXJ0OiBzY2FsZUJlaGF2aW91cnNbMF0uc2NhbGVBLmEsXG4gICAgICBlbmQ6IHNjYWxlQmVoYXZpb3Vyc1swXS5zY2FsZUIuYSxcbiAgICB9O1xuXG4gICAgY29uc3QgY2hhbmdlZCA9ICh2YWwpID0+IHtcbiAgICAgIHNjYWxlQmVoYXZpb3Vycy5mb3JFYWNoKChzY2FsZSkgPT4ge1xuICAgICAgICBzY2FsZS5zY2FsZUEuYSA9IHByb3Auc3RhcnQ7XG4gICAgICAgIHNjYWxlLnNjYWxlQS5iID0gcHJvcC5zdGFydDtcbiAgICAgICAgc2NhbGUuc2NhbGVCLmEgPSBwcm9wLmVuZDtcbiAgICAgICAgc2NhbGUuc2NhbGVCLmIgPSBwcm9wLmVuZDtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBjb25zdCBmb2xkZXIgPSBndWkuYWRkRm9sZGVyKFwiU2NhbGVcIik7XG4gICAgZm9sZGVyLmFkZChwcm9wLCBcInN0YXJ0XCIsIDAuMCwgMy4wKS5zdGVwKDAuMSkub25DaGFuZ2UoY2hhbmdlZCk7XG4gICAgZm9sZGVyLmFkZChwcm9wLCBcImVuZFwiLCAwLjAsIDMuMCkuc3RlcCgwLjEpLm9uQ2hhbmdlKGNoYW5nZWQpO1xuICAgIGZvbGRlci5vcGVuKCk7XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGluaXRDb2xvcihndWksIGNvbG9yczogTmVidWxhQ29sb3JbXSk6IHZvaWQge1xuICAgIGNvbnN0IHByb3AgPSB7XG4gICAgICBzdGFydDogY29sb3JzWzBdLmNvbG9yQS5jb2xvcnNbMF0uZ2V0SGV4KCksXG4gICAgICBlbmQ6IGNvbG9yc1swXS5jb2xvckIuY29sb3JzWzBdLmdldEhleCgpLFxuICAgIH07XG5cbiAgICBjb25zdCBjaGFuZ2VkID0gKCkgPT4ge1xuICAgICAgY29sb3JzLmZvckVhY2goKGNvbG9yKSA9PiB7XG4gICAgICAgIGNvbG9yLmNvbG9yQS5jb2xvcnNbMF0uc2V0SGV4KHByb3Auc3RhcnQpO1xuICAgICAgICBjb2xvci5jb2xvckIuY29sb3JzWzBdLnNldEhleChwcm9wLmVuZCk7XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgY29uc3QgZm9sZGVyID0gZ3VpLmFkZEZvbGRlcihcIkNvbG9yXCIpO1xuICAgIGZvbGRlci5hZGRDb2xvcihwcm9wLCBcInN0YXJ0XCIpLm9uQ2hhbmdlKGNoYW5nZWQpO1xuICAgIGZvbGRlci5hZGRDb2xvcihwcm9wLCBcImVuZFwiKS5vbkNoYW5nZShjaGFuZ2VkKTtcbiAgICBmb2xkZXIub3BlbigpO1xuICB9XG59XG4iLCJpbXBvcnQgeyBHVUkgfSBmcm9tIFwibGlsLWd1aVwiO1xuaW1wb3J0ICogYXMgVEhSRUUgZnJvbSBcInRocmVlXCI7XG5pbXBvcnQgeyBDb2xvciwgU2NlbmUgfSBmcm9tIFwidGhyZWVcIjtcblxuaW1wb3J0IFN5c3RlbSwge1xuICBBbHBoYSxcbiAgQ29sb3IgYXMgTmVidWxhQ29sb3IsXG4gIEVtaXR0ZXIsXG4gIExpZmUsXG4gIE1hc3MsXG4gIFBvaW50Wm9uZSxcbiAgUG9zaXRpb24sXG4gIFJhZGlhbFZlbG9jaXR5LFxuICBSYWRpdXMsXG4gIFJhdGUsXG4gIFNjYWxlLFxuICBTcGFuLFxuICBTcHJpdGVSZW5kZXJlcixcbiAgVmVjdG9yM0QsXG59IGZyb20gXCJ0aHJlZS1uZWJ1bGFcIjtcbmltcG9ydCB7IENvbW1vbiB9IGZyb20gXCIuL0NvbW1vblwiO1xuaW1wb3J0IHsgTmVidWxhR1VJIH0gZnJvbSBcIi4vTmVidWxhR1VJXCI7XG5cbmV4cG9ydCBjbGFzcyBTdHVkeSB7XG4gIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgVyA9IDY0MDtcbiAgcHVibGljIHN0YXRpYyByZWFkb25seSBIID0gNDgwO1xuXG4gIHByaXZhdGUgc3lzdGVtOiBTeXN0ZW07XG4gIHByaXZhdGUgZW1pdHRlcjogRW1pdHRlcjtcbiAgcHJpdmF0ZSByYW5nZTogUmFkaWFsVmVsb2NpdHk7XG4gIHByaXZhdGUgcmFkaXVzOiBSYWRpdXM7XG4gIHByaXZhdGUgbGlmZTogTGlmZTtcbiAgcHJpdmF0ZSBhbHBoYTogQWxwaGE7XG4gIHByaXZhdGUgc2NhbGU6IFNjYWxlO1xuICBwcml2YXRlIGNvbG9yOiBOZWJ1bGFDb2xvcjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBjb25zdCBzY2VuZSA9IENvbW1vbi5pbml0U2NlbmUoKTtcbiAgICBDb21tb24uaW5pdExpZ2h0KHNjZW5lKTtcbiAgICBjb25zdCBjYW1lcmEgPSBDb21tb24uaW5pdENhbWVyYShzY2VuZSwgU3R1ZHkuVywgU3R1ZHkuSCk7XG4gICAgY29uc3QgcmVuZGVyZXIgPSBDb21tb24uaW5pdFJlbmRlcmVyKFN0dWR5LlcsIFN0dWR5LkgpO1xuICAgIGNvbnN0IGNvbnRyb2wgPSBDb21tb24uaW5pdENvbnRyb2woY2FtZXJhLCByZW5kZXJlcik7XG4gICAgQ29tbW9uLmluaXRIZWxwZXIoc2NlbmUpO1xuICAgIHRoaXMuaW5pdE9iamVjdChzY2VuZSk7XG4gICAgQ29tbW9uLnJlbmRlcihjb250cm9sLCByZW5kZXJlciwgc2NlbmUsIGNhbWVyYSwgKCkgPT4ge1xuICAgICAgaWYgKHRoaXMuc3lzdGVtKSB7XG4gICAgICAgIHRoaXMuc3lzdGVtLnVwZGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdGhpcy5pbml0R1VJKCk7XG4gIH1cblxuICBwcml2YXRlIGluaXRPYmplY3Qoc2NlbmU6IFNjZW5lKTogdm9pZCB7XG4gICAgdGhpcy5zeXN0ZW0gPSBuZXcgU3lzdGVtKCk7XG4gICAgdGhpcy5lbWl0dGVyID0gbmV3IEVtaXR0ZXIoKTtcbiAgICBjb25zdCByZW5kZXJlciA9IG5ldyBTcHJpdGVSZW5kZXJlcihzY2VuZSwgVEhSRUUpO1xuXG4gICAgdGhpcy5yYW5nZSA9IG5ldyBSYWRpYWxWZWxvY2l0eSg0NSwgbmV3IFZlY3RvcjNEKDAsIDEsIDApLCAxODApO1xuICAgIHRoaXMucmFkaXVzID0gbmV3IFJhZGl1cyg2LCAxMik7XG4gICAgdGhpcy5saWZlID0gbmV3IExpZmUoNik7XG5cbiAgICB0aGlzLmFscGhhID0gbmV3IEFscGhhKDEsIDApO1xuICAgIHRoaXMuc2NhbGUgPSBuZXcgU2NhbGUoMC4xLCAxLjApO1xuICAgIHRoaXMuY29sb3IgPSBuZXcgTmVidWxhQ29sb3IobmV3IENvbG9yKDB4MDBmZjAwKSwgbmV3IENvbG9yKDB4MDBmZjAwKSk7XG5cbiAgICB0aGlzLmVtaXR0ZXJcbiAgICAgIC5zZXRSYXRlKG5ldyBSYXRlKG5ldyBTcGFuKDQsIDE2KSwgMC4xKSlcbiAgICAgIC5zZXRJbml0aWFsaXplcnMoW1xuICAgICAgICBuZXcgUG9zaXRpb24obmV3IFBvaW50Wm9uZSgwLCAwKSksXG4gICAgICAgIG5ldyBNYXNzKDEpLFxuICAgICAgICB0aGlzLnJhZGl1cyxcbiAgICAgICAgdGhpcy5saWZlLFxuICAgICAgICB0aGlzLnJhbmdlLFxuICAgICAgXSlcbiAgICAgIC5zZXRCZWhhdmlvdXJzKFt0aGlzLmFscGhhLCB0aGlzLnNjYWxlLCB0aGlzLmNvbG9yXSlcbiAgICAgIC5lbWl0KCk7XG5cbiAgICB0aGlzLnN5c3RlbS5hZGRFbWl0dGVyKHRoaXMuZW1pdHRlcikuYWRkUmVuZGVyZXIocmVuZGVyZXIpO1xuICB9XG5cbiAgcHVibGljIGluaXRHVUkoKTogdm9pZCB7XG4gICAgY29uc3QgZ3VpID0gbmV3IEdVSSgpO1xuXG4gICAgY29uc3QgZm9sZGVyID0gZ3VpLmFkZEZvbGRlcihcIkVtaXR0ZXJcIik7XG4gICAgZm9sZGVyLm9wZW4oKTtcbiAgICBOZWJ1bGFHVUkuaW5pdEVtaXR0ZXJQb3NpdGlvbihmb2xkZXIsIFt0aGlzLmVtaXR0ZXJdKTtcbiAgICBOZWJ1bGFHVUkuaW5pdEVtaXR0ZXJSYXRlKGZvbGRlciwgW3RoaXMuZW1pdHRlcl0pO1xuICAgIE5lYnVsYUdVSS5pbml0UmFuZ2UoZm9sZGVyLCBbdGhpcy5yYW5nZV0pO1xuICAgIE5lYnVsYUdVSS5pbml0UmFkaXVzKGZvbGRlciwgW3RoaXMucmFkaXVzXSk7XG4gICAgTmVidWxhR1VJLmluaXRMaWZlKGZvbGRlciwgW3RoaXMubGlmZV0pO1xuXG4gICAgY29uc3QgZm9sZGVyQmVoYXZpb3VyID0gZ3VpLmFkZEZvbGRlcihcIkJlaGF2aW91clwiKTtcbiAgICBOZWJ1bGFHVUkuaW5pdEFscGhhKGZvbGRlckJlaGF2aW91ciwgW3RoaXMuYWxwaGFdKTtcbiAgICBOZWJ1bGFHVUkuaW5pdFNjYWxlKGZvbGRlckJlaGF2aW91ciwgW3RoaXMuc2NhbGVdKTtcbiAgICBOZWJ1bGFHVUkuaW5pdENvbG9yKGZvbGRlckJlaGF2aW91ciwgW3RoaXMuY29sb3JdKTtcbiAgICBmb2xkZXJCZWhhdmlvdXIub3BlbigpO1xuICB9XG59XG5cbndpbmRvdy5vbmxvYWQgPSAoKSA9PiB7XG4gIGNvbnN0IHN0dWR5ID0gbmV3IFN0dWR5KCk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///249\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(F.exports,F,F.exports,__webpack_require__),F.loaded=!0,F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,B)=>{if(!U){var s=1/0;for(L=0;L<deferred.length;L++){for(var[U,F,B]=deferred[L],n=!0,x=0;x<U.length;x++)(!1&B||s>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[x])))?U.splice(x--,1):(n=!1,B<s&&(s=B));if(n){deferred.splice(L--,1);var e=F();void 0!==e&&(Q=e)}}return Q}B=B||0;for(var L=deferred.length;L>0&&deferred[L-1][2]>B;L--)deferred[L]=deferred[L-1];deferred[L]=[U,F,B]},__webpack_require__.n=Q=>{var U=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(U,{a:U}),U},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.j=55,(()=>{var Q={55:0};__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var B,s,[n,x,e]=F,L=0;if(n.some((U=>0!==Q[U]))){for(B in x)__webpack_require__.o(x,B)&&(__webpack_require__.m[B]=x[B]);if(e)var I=e(__webpack_require__)}for(U&&U(F);L<n.length;L++)s=n[L],__webpack_require__.o(Q,s)&&Q[s]&&Q[s][0](),Q[s]=0;return __webpack_require__.O(I)},F=self.webpackChunkthreejs_lab=self.webpackChunkthreejs_lab||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[121],(()=>__webpack_require__(249)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();