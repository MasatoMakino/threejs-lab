(()=>{"use strict";var __webpack_modules__={936:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// UNUSED EXPORTS: Study\n\n// EXTERNAL MODULE: ./node_modules/lil-gui/dist/lil-gui.esm.js\nvar lil_gui_esm = __webpack_require__(638);\n// EXTERNAL MODULE: ./node_modules/three/build/three.webgpu.js\nvar three_webgpu = __webpack_require__(6293);\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(6753);\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js\nvar OrbitControls = __webpack_require__(3580);\n;// CONCATENATED MODULE: ./src/Common.ts\n\n\nvar Common = /** @class */ (function () {\n    function Common() {\n    }\n    Common.initScene = function () {\n        var scene = new three_module.Scene();\n        return scene;\n    };\n    Common.initLight = function (scene) {\n        var ambientLight = new three_module.AmbientLight(0xffffff, 1.0);\n        scene.add(ambientLight);\n        return ambientLight;\n    };\n    Common.initCamera = function (scene, W, H, near, far) {\n        if (near === void 0) { near = 1; }\n        if (far === void 0) { far = 400; }\n        var camera = new three_module.PerspectiveCamera(45, W / H, near, far);\n        camera.position.set(0, 0, 100);\n        camera.updateMatrixWorld(false);\n        scene.add(camera);\n        return camera;\n    };\n    Common.initControl = function (camera, render) {\n        var domElement;\n        if (render) {\n            domElement = render.domElement;\n        }\n        var control = new OrbitControls/* OrbitControls */.N(camera, domElement);\n        control.update();\n        return control;\n    };\n    Common.initRenderer = function (W, H, color, id, antialias) {\n        if (color === void 0) { color = 0x000000; }\n        if (id === void 0) { id = "webgl-canvas"; }\n        if (antialias === void 0) { antialias = true; }\n        var renderer = new three_module.WebGLRenderer({\n            canvas: document.getElementById(id),\n            antialias: antialias,\n        });\n        this.initRendererSettings(renderer, color, W, H);\n        return renderer;\n    };\n    Common.initRendererSettings = function (renderer, color, W, H) {\n        renderer.setClearColor(new three_module.Color(color));\n        renderer.setSize(W, H);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        console.log("three.js revision: ", three_module.REVISION);\n    };\n    Common.initHelper = function (scene) {\n        var axesHelper = new three_module.AxesHelper(30);\n        scene.add(axesHelper);\n    };\n    Common.render = function (control, renderer, scene, camera, onBeforeRender) {\n        var rendering = function () {\n            if (onBeforeRender) {\n                onBeforeRender();\n            }\n            control.update();\n            renderer.render(scene, camera);\n            requestAnimationFrame(rendering);\n        };\n        rendering();\n    };\n    Common.addRendererInfo = function () {\n        var info = document.createElement("div");\n        document.body.appendChild(info);\n        return info;\n    };\n    Common.updateRendererInfo = function (div, info) {\n        div.innerText = JSON.stringify(info);\n    };\n    return Common;\n}());\n\n\n;// CONCATENATED MODULE: ./src/CommonWebGPU.ts\n\n\nvar CommonWebGPU_Common = /** @class */ (function () {\n    function Common() {\n    }\n    Common.initScene = function () {\n        var scene = new three_webgpu/* Scene */.Z58();\n        return scene;\n    };\n    Common.initLight = function (scene) {\n        var ambientLight = new three_webgpu/* AmbientLight */.$p8(0xffffff, 1.0);\n        scene.add(ambientLight);\n        return ambientLight;\n    };\n    Common.initCamera = function (scene, W, H, near, far) {\n        if (near === void 0) { near = 1; }\n        if (far === void 0) { far = 400; }\n        var camera = new three_webgpu/* PerspectiveCamera */.ubm(45, W / H, near, far);\n        camera.position.set(0, 0, 100);\n        camera.updateMatrixWorld(false);\n        scene.add(camera);\n        return camera;\n    };\n    Common.initControl = function (camera, render) {\n        var domElement;\n        if (render) {\n            domElement = render.domElement;\n        }\n        var control = new OrbitControls/* OrbitControls */.N(camera, domElement);\n        control.update();\n        return control;\n    };\n    Common.initWebGPURenderer = function (W, H, color, id, antialias) {\n        if (color === void 0) { color = 0x000000; }\n        if (id === void 0) { id = "webgl-canvas"; }\n        if (antialias === void 0) { antialias = true; }\n        var renderer = new three_webgpu/* WebGPURenderer */.uV1({\n            canvas: document.getElementById(id),\n            antialias: antialias,\n        });\n        this.initRendererSettings(renderer, color, W, H);\n        return renderer;\n    };\n    Common.initRendererSettings = function (renderer, color, W, H) {\n        renderer.setClearColor(new three_webgpu/* Color */.Q1f(color));\n        renderer.setSize(W, H);\n        renderer.setPixelRatio(window.devicePixelRatio);\n        console.log("three.js revision: ", three_webgpu/* REVISION */.sPf);\n    };\n    Common.initHelper = function (scene) {\n        var axesHelper = new three_webgpu/* AxesHelper */.IzY(30);\n        scene.add(axesHelper);\n    };\n    Common.render = function (control, renderer, scene, camera, onBeforeRender) {\n        var rendering = function () {\n            if (onBeforeRender) {\n                onBeforeRender();\n            }\n            control.update();\n            renderer.renderAsync(scene, camera);\n            requestAnimationFrame(rendering);\n        };\n        rendering();\n    };\n    Common.addRendererInfo = function () {\n        var info = document.createElement("div");\n        document.body.appendChild(info);\n        return info;\n    };\n    Common.updateRendererInfo = function (div, info) {\n        div.innerText = JSON.stringify(info);\n    };\n    return Common;\n}());\n\n\n;// CONCATENATED MODULE: ./src/StudyColorSpaceAlpha.ts\n\n\n\n\n/**\n * WebGLとWebGPUでのopacity値の設定の違いを確認するためのサンプルコード\n * - WebGLではopacityプロパティはガンマ補正(2.2)が適用される\n * - WebGPUではリニア値が適用される。\n *\n * Color.setRGB(alpha, 0,0,"srgb")を利用することでガンマ補正後のアルファ値が取得できるので、\n * WebGPU環境でWebGLやPhotoshopなどの環境の表示を再現する場合はこちらを利用する。\n */\nvar Study = /** @class */ (function () {\n    function Study() {\n        /**\n         * CanvasElementを、そのCanvasElementを内包したfigure要素に置き換える。figure要素にはfigcaption要素が追加される。\n         * @param canvas\n         * @param figure\n         */\n        this.addFigure = function (canvas, figure) {\n            var figureElement = document.createElement("figure");\n            var figCaption = document.createElement("figcaption");\n            figCaption.textContent = figure;\n            figureElement.appendChild(canvas);\n            figureElement.appendChild(figCaption);\n            document.body.appendChild(figureElement);\n        };\n        this.initGUI = function (materialBasic, materialBasicWebGPU, rendererGL, rendererWebGPU) {\n            var materials = [materialBasic, materialBasicWebGPU];\n            var gui = new lil_gui_esm/* GUI */.cL();\n            var materialColor = {\n                r: 0.5,\n                g: 0.5,\n                b: 0.5,\n            };\n            var materialAlpha = {\n                a: 1,\n                useGamma: false,\n            };\n            var colorSpaceSetting = {\n                colorSpace: rendererGL.outputColorSpace,\n                workspace: three_webgpu/* ColorManagement */.ppV.workingColorSpace,\n            };\n            var onChangeColor = function () {\n                materials.forEach(function (m) {\n                    m.color.setRGB(materialColor.r, materialColor.g, materialColor.b);\n                });\n            };\n            gui.add(materialColor, "r", 0, 1).onChange(onChangeColor);\n            gui.add(materialColor, "g", 0, 1).onChange(onChangeColor);\n            gui.add(materialColor, "b", 0, 1).onChange(onChangeColor);\n            var updateAlpha = function () {\n                materials.forEach(function (m) {\n                    m.opacity = materialAlpha.a;\n                });\n            };\n            gui.add(materialAlpha, "a", 0, 1).onChange(updateAlpha);\n            var updateColorSpace = function () {\n                rendererGL.outputColorSpace = rendererWebGPU.outputColorSpace =\n                    colorSpaceSetting.colorSpace;\n                three_webgpu/* ColorManagement */.ppV.workingColorSpace = colorSpaceSetting.workspace;\n            };\n            gui\n                .add(colorSpaceSetting, "colorSpace", ["srgb", "srgb-linear"])\n                .onChange(updateColorSpace);\n            gui\n                .add(colorSpaceSetting, "workspace", ["srgb-linear", "display-p3-linear"])\n                .onChange(updateColorSpace);\n            onChangeColor();\n            updateAlpha();\n            updateColorSpace();\n        };\n        // const scene = Common.initScene();\n        // Common.initLight(scene);\n        // const camera = Common.initCamera(scene, Study.W, Study.H);\n        var glScnene = Study.initWebGLScene();\n        var wgpuScene = Study.initWebGPUScene();\n        var canvasGL = document.createElement("canvas");\n        canvasGL.id = "webGPU-canvas";\n        document.body.appendChild(canvasGL);\n        document.body.style.display = "flex"; // bodyの子要素を横並びにする\n        var renderer = Common.initRenderer(Study.W, Study.H, 0x000000);\n        var rendererGPU = CommonWebGPU_Common.initWebGPURenderer(Study.W, Study.H, 0x000000, "webGPU-canvas");\n        var matGL = this.initObject(glScnene.scene);\n        var matGPU = this.initObject(wgpuScene.scene);\n        this.addFigure(renderer.domElement, "WebGL");\n        this.addFigure(rendererGPU.domElement, "WebGPU");\n        this.initGUI(matGL, matGPU, renderer, rendererGPU);\n        var rendering = function () {\n            renderer.render(glScnene.scene, glScnene.camera);\n            rendererGPU.renderAsync(wgpuScene.scene, wgpuScene.camera);\n            requestAnimationFrame(rendering);\n        };\n        rendering();\n    }\n    Study.initWebGLScene = function () {\n        var scene = Common.initScene();\n        Common.initLight(scene);\n        var camera = Common.initCamera(scene, Study.W, Study.H);\n        return { scene: scene, camera: camera };\n    };\n    Study.initWebGPUScene = function () {\n        var scene = CommonWebGPU_Common.initScene();\n        CommonWebGPU_Common.initLight(scene);\n        var camera = CommonWebGPU_Common.initCamera(scene, Study.W, Study.H);\n        return { scene: scene, camera: camera };\n    };\n    Study.prototype.initObject = function (scene) {\n        var geo = new three_webgpu/* PlaneGeometry */.bdM(30, 30);\n        var mat = new three_webgpu/* MeshBasicMaterial */.V9B();\n        mat.color.setRGB(1, 0, 0);\n        mat.transparent = true;\n        var mesh = new three_webgpu/* Mesh */.eaF(geo, mat);\n        scene.add(mesh);\n        return mat;\n    };\n    Study.W = 640;\n    Study.H = 480;\n    return Study;\n}());\n\nwindow.onload = function () {\n    var study = new Study();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///936\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={id:Q,loaded:!1,exports:{}};return __webpack_modules__[Q].call(F.exports,F,F.exports,__webpack_require__),F.loaded=!0,F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,B)=>{if(!U){var e=1/0;for(l=0;l<deferred.length;l++){for(var[U,F,B]=deferred[l],n=!0,s=0;s<U.length;s++)(!1&B||e>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[s])))?U.splice(s--,1):(n=!1,B<e&&(e=B));if(n){deferred.splice(l--,1);var c=F();void 0!==c&&(Q=c)}}return Q}B=B||0;for(var l=deferred.length;l>0&&deferred[l-1][2]>B;l--)deferred[l]=deferred[l-1];deferred[l]=[U,F,B]},__webpack_require__.n=Q=>{var U=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(U,{a:U}),U},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(Q){if("object"==typeof window)return window}}(),__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),__webpack_require__.r=Q=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},__webpack_require__.nmd=Q=>(Q.paths=[],Q.children||(Q.children=[]),Q),__webpack_require__.j=29,(()=>{var Q={29:0};__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var B,e,[n,s,c]=F,l=0;if(n.some((U=>0!==Q[U]))){for(B in s)__webpack_require__.o(s,B)&&(__webpack_require__.m[B]=s[B]);if(c)var I=c(__webpack_require__)}for(U&&U(F);l<n.length;l++)e=n[l],__webpack_require__.o(Q,e)&&Q[e]&&Q[e][0](),Q[e]=0;return __webpack_require__.O(I)},F=self.webpackChunkthreejs_lab=self.webpackChunkthreejs_lab||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[121],(()=>__webpack_require__(936)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();